<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Upcoming Bookings Dashboard</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Bootstrap 5 & Bootstrap Icons -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        :root {
            --primary-color: #4e73df;
            --secondary-color: #1cc88a;
            --warning-color: #f6c23e;
            --danger-color: #e74a3b;
            --dark-color: #5a5c69;
        }

        body {
            background-color: #f8f9fc;
            font-family: 'Nunito', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
        }

        .card {
            transition: transform 0.3s, box-shadow 0.3s;
            border: none;
            box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
        }

            .card:hover {
                transform: translateY(-5px);
                box-shadow: 0 0.5rem 2rem 0 rgba(58, 59, 69, 0.2);
            }

        .card-booking {
            border-radius: 0.7rem;
            overflow: hidden;
        }

        .card-header-custom {
            background: linear-gradient(135deg, var(--primary-color) 0%, #224abe 100%);
            color: white;
            border: none;
            padding: 1rem;
            font-weight: 600;
        }

        .booking-badge {
            font-size: 0.8rem;
            padding: 0.35rem 0.65rem;
            border-radius: 50rem;
            font-weight: 600;
            display: inline-flex;
            align-items: center;
            gap: 0.35rem;
        }

        .status-paid {
            color: var(--secondary-color);
            font-weight: bold;
        }

        .status-partial {
            color: var(--warning-color);
            font-weight: bold;
        }

        .status-pending {
            color: var(--danger-color);
            font-weight: bold;
        }

        .filter-btn.active {
            box-shadow: 0 0 0 0.2rem rgba(78, 115, 223, 0.25);
            transform: translateY(-2px);
        }

        .filter-btns {
            border-radius: 0.7rem;
            overflow: hidden;
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        }

            .filter-btns .btn {
                padding: 0.6rem 1.2rem;
                border: none;
            }

        .booking-info-item {
            display: flex;
            align-items: center;
            margin-bottom: 0.75rem;
            gap: 0.5rem;
        }

            .booking-info-item i {
                font-size: 1rem;
                width: 1.5rem;
                text-align: center;
            }

        .booking-customer {
            display: flex;
            align-items: center;
            margin-bottom: 1rem;
        }

        .booking-customer-avatar {
            width: 48px;
            height: 48px;
            background-color: var(--primary-color);
            color: white;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.25rem;
            font-weight: bold;
            margin-right: 1rem;
        }

        .booking-dates {
            background-color: rgba(78, 115, 223, 0.1);
            border-radius: 0.5rem;
            padding: 0.75rem;
            margin-bottom: 1rem;
        }

        .divider {
            height: 1px;
            margin: 1rem 0;
            background: linear-gradient(to right, transparent, rgba(0,0,0,0.1), transparent);
        }

        .shifts-container {
            background-color: rgba(28, 200, 138, 0.1);
            border-radius: 0.5rem;
            padding: 0.75rem;
        }

        .page-header {
            background: linear-gradient(135deg, var(--primary-color) 0%, #224abe 100%);
            color: white;
            padding: 2rem 0;
            margin-bottom: 2rem;
            border-radius: 0 0 1rem 1rem;
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        }

        .empty-state {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 3rem;
            text-align: center;
        }

            .empty-state i {
                font-size: 4rem;
                color: #d1d3e2;
                margin-bottom: 1rem;
            }

        @@media (max-width: 767.98px) {
            .filter-btns

        {
            display: flex;
            flex-wrap: wrap;
        }

        .filter-btns .btn {
            flex: 1 0 auto;
            border-radius: 0;
        }

        .page-header {
            padding: 1.5rem 0;
            border-radius: 0 0 0.5rem 0.5rem;
        }

        }
    </style>
</head>
<body>
    <!-- Page Header -->
    <div class="page-header">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-md-6">
                    <h1 class="mb-0"><i class="bi bi-calendar-check me-2"></i>Upcoming Bookings</h1>
                </div>
                <div class="col-md-6">
                    <div class="filter-btns btn-group d-flex mt-3 mt-md-0 float-md-end" role="group">
                        <button class="filter-btn btn btn-light active" data-days="2">
                            <i class="bi bi-clock-history me-1"></i> Next 2 Days
                        </button>
                        <button class="filter-btn btn btn-light" data-days="7">
                            <i class="bi bi-calendar-week me-1"></i> Next 7 Days
                        </button>
                        <button class="filter-btn btn btn-light" data-days="30">
                            <i class="bi bi-calendar-month me-1"></i> Next 30 Days
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <!-- Loading Indicator -->
        <div id="loading-indicator" class="text-center py-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mt-2 text-muted">Loading upcoming bookings...</p>
        </div>

        <!-- Bookings List -->
        <div id="upcoming-events-list" class="row"></div>
    </div>

    <!-- Modal for Booking Details -->
    <div class="modal fade" id="bookingModal" tabindex="-1" aria-labelledby="bookingModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="bookingModalLabel">Booking Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <!-- Booking details will be inserted here -->
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS and dependencies -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
                $(function () {
                    function formatDate(dateStr) {
                        const d = new Date(dateStr);
                        return `${String(d.getDate()).padStart(2, '0')}/${String(d.getMonth() + 1).padStart(2, '0')}/${d.getFullYear()}`;
                    }

                    function formatTimeTo12Hour(timeStr) {
                        if (!timeStr) return '--';
                        const [h, m] = timeStr.split(':');
                        const d = new Date();
                        d.setHours(+h);
                        d.setMinutes(+m);
                        return d.toLocaleTimeString('en-US', { hour: 'numeric', minute: '2-digit', hour12: true });
                    }

                    function capitalize(str) {
                        if (!str) return '';
                        return str.charAt(0).toUpperCase() + str.slice(1);
                    }

                    function getEventName(eventId) {
                        const events = {
                            1: 'Wedding',
                            2: 'Corporate Event',
                            3: 'Birthday Party'
                        };
                        return events[eventId] || 'Unknown Event';
                    }

                    function getEventIcon(eventId) {
                        const icons = {
                            1: 'bi-heart-fill text-danger',           // Wedding
                            2: 'bi-briefcase-fill text-primary',      // Corporate
                            3: 'bi-gift-fill text-warning'            // Birthday
                        };
                        return icons[eventId] || 'bi-calendar-event text-info';
                    }

                    function getPaymentStatusClass(status) {
                        switch (status?.toLowerCase()) {
                            case 'paid': return 'status-paid';
                            case 'partially paid': return 'status-partial';
                            default: return 'status-pending';
                        }
                    }

                    function getPaymentStatusBadge(status) {
                        let badgeClass, icon;

                        switch (status?.toLowerCase()) {
                            case 'paid':
                                badgeClass = 'bg-success';
                                icon = 'bi-check-circle-fill';
                                break;
                            case 'partially paid':
                                badgeClass = 'bg-warning text-dark';
                                icon = 'bi-exclamation-circle-fill';
                                break;
                            default:
                                badgeClass = 'bg-danger';
                                icon = 'bi-x-circle-fill';
                        }

                        return `<span class="booking-badge ${badgeClass}"><i class="bi ${icon}"></i> ${status || 'Pending'}</span>`;
                    }

                    function formatShifts(booking) {
                        if (!booking.dateWiseShifts) {
                            return `<div class="booking-info-item"><i class="bi bi-clock text-info"></i> ${capitalize(booking.shiftType || 'Full Day')}</div>`;
                        }

                        let html = '<div class="shifts-container">';
                        try {
                            const parsed = JSON.parse(booking.dateWiseShifts);
                            Object.entries(parsed).forEach(([date, shifts]) => {
                                const shiftDetails = shifts.map(s => {
                                    if (typeof s === 'string') return capitalize(s);
                                    const start = formatTimeTo12Hour(s.startTime);
                                    const end = formatTimeTo12Hour(s.endTime);
                                    return `${capitalize(s.shift)} (${start} - ${end})`;
                                }).join(', ');
                                html += `<div class="mb-2"><i class="bi bi-calendar-date text-success me-2"></i> ${formatDate(date)}: <strong>${shiftDetails}</strong></div>`;
                            });
                        } catch (e) {
                            html = '<div class="text-danger"><i class="bi bi-exclamation-triangle-fill me-2"></i>Invalid shift data</div>';
                        }
                        html += '</div>';
                        return html;
                    }

                    function getInitials(name) {
                        if (!name) return '?';
                        return name.split(' ').map(n => n[0]).join('').toUpperCase().substring(0, 2);
                    }

                    function loadUpcomingEvents(daysAhead) {
                        // Show loading indicator
                        $('#loading-indicator').show();
                        $('#upcoming-events-list').empty();

                        // Reset active state on buttons
                        $('.filter-btn').removeClass('active');
                        $(`.filter-btn[data-days="${daysAhead}"]`).addClass('active');

                        const now = new Date();
                        const future = new Date();
                        future.setDate(future.getDate() + daysAhead);

                        // Simulate loading delay (remove in production)
                        setTimeout(() => {
                            $.get('/EventBooking/GetAllEventBookings', function (bookings) {
                                // Hide loading indicator
                                $('#loading-indicator').hide();

                                const filtered = bookings.filter(bk => {
                                    const from = new Date(bk.fromDate || bk.createdDate);
                                    return from >= now && from <= future;
                                });

                                const container = $('#upcoming-events-list');

                                if (!filtered.length) {
                                    container.html(`
                                        <div class="col-12">
                                            <div class="card shadow-sm">
                                                <div class="card-body empty-state">
                                                    <i class="bi bi-calendar-x"></i>
                                                    <h4>No Upcoming Bookings</h4>
                                                    <p class="text-muted">There are no bookings scheduled for the next ${daysAhead} days.</p>
                                                </div>
                                            </div>
                                        </div>
                                    `);
                                    return;
                                }

                                filtered.sort((a, b) => new Date(a.fromDate) - new Date(b.fromDate));

                                filtered.forEach(bk => {
                                    const from = new Date(bk.fromDate);
                                    const to = new Date(bk.toDate || bk.fromDate);
                                    const dateRange = formatDate(from) + (from.getTime() !== to.getTime() ? ' → ' + formatDate(to) : '');
                                    const daysLeft = Math.floor((from - now) / (1000 * 60 * 60 * 24));
                                    let urgencyBadge = '';

                                    if (daysLeft === 0) {
                                        urgencyBadge = '<span class="booking-badge bg-danger ms-2"><i class="bi bi-alarm"></i> Today</span>';
                                    } else if (daysLeft === 1) {
                                        urgencyBadge = '<span class="booking-badge bg-warning text-dark ms-2"><i class="bi bi-alarm"></i> Tomorrow</span>';
                                    } else if (daysLeft <= 3) {
                                        urgencyBadge = `<span class="booking-badge bg-info text-white ms-2"><i class="bi bi-calendar-check"></i> In ${daysLeft} days</span>`;
                                    }

                                    const card = `
                                        <div class="col-lg-6 col-xl-4 mb-4">
                                            <div class="card card-booking h-100">
                                                <div class="card-header-custom d-flex justify-content-between">
                                                    <div>
                                                        <i class="${getEventIcon(bk.eventId)} me-2"></i>
                                                        ${bk.eventName}
                                                    </div>
                                                    ${getPaymentStatusBadge(bk.paymentStatus)}
                                                </div>
                                                <div class="card-body">
                                                    <div class="booking-customer">
                                                        <div class="booking-customer-avatar">
                                                            ${getInitials(bk.customerName)}
                                                        </div>
                                                        <div>
                                                            <h5 class="mb-0">${bk.customerName || 'Unknown Customer'}</h5>
                                                            <p class="text-muted mb-0">
                                                                <i class="bi bi-telephone me-1"></i>
                                                                ${bk.phoneNumber || 'No phone number'}
                                                            </p>
                                                        </div>
                                                    </div>

                                                    <div class="booking-dates">
                                                        <div class="d-flex justify-content-between align-items-center">
                                                            <div><i class="bi bi-calendar-event text-primary me-2"></i> <strong>${dateRange}</strong></div>
                                                            ${urgencyBadge}
                                                        </div>
                                                    </div>

                                                    <div class="booking-info-item">
                                                        <i class="bi bi-currency-rupee text-success"></i>
                                                        <div>
                                                            <div>Total: <strong>₹${bk.totalAmount || 0}</strong></div>
                                                            <div class="d-flex justify-content-between">
                                                                <span class="text-success">Paid: ₹${bk.advancePayment || 0}</span>
                                                                <span class="text-danger">Due: ₹${bk.remainingPayment || 0}</span>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="divider"></div>

                                                    ${formatShifts(bk)}
                                                </div>
                                                <div class="card-footer bg-white border-top-0">
                                                    <div class="d-flex justify-content-between">
                                                        <button class="btn btn-sm btn-outline-primary view-details" data-id="${bk.bookingId}">
                                                            <i class="bi bi-eye me-1"></i> View Details
                                                        </button>
                                                        <button class="btn btn-sm btn-success whatsapp-confirm" data-id="${bk.bookingId}">
                                                            <i class="bi bi-whatsapp me-1"></i> Send Confirmation
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>`;

                                    container.append(card);

                                    // 🔔 Push notification logic
                                    if (daysLeft === 2 && "Notification" in window) {
                                        const notifyKey = `notified-${bk.bookingId}`;
                                        if (!localStorage.getItem(notifyKey)) {
                                            const sendNotification = () => {
                                                new Notification("Reminder: Upcoming Booking", {
                                                    body: `Booking for ${bk.customerName} is in 2 days.`
                                                });
                                                localStorage.setItem(notifyKey, '1');
                                            };
                                            if (Notification.permission === "granted") {
                                                sendNotification();
                                            } else if (Notification.permission !== "denied") {
                                                Notification.requestPermission().then(permission => {
                                                    if (permission === "granted") sendNotification();
                                                });
                                            }
                                        }
                                    }
                                });

                                // Add event handlers after appending cards
                                $('.view-details').click(function() {
                                    const bookingId = $(this).data('id');
                                    const booking = filtered.find(b => b.bookingId === bookingId);

                                    if (booking) {
                                        // Use booking data directly
                                        console.log('Booking Details:', booking);

                                        // Show modal with booking info
                                        $('#bookingModal .modal-title').text(`Booking for ${booking.customerName}`);
                                        $('#bookingModal .modal-body').html(`
                                          <p><strong>Event:</strong> ${booking.eventName}</p>
                                            <p><strong>Date:</strong> ${formatDate(booking.fromDate)}</p>
                                            <p><strong>Phone:</strong> ${booking.phoneNumber}</p>
                                            <p><strong>Total:</strong> ₹${booking.totalAmount}</p>
                                            <p><strong>Advance:</strong> ₹${booking.advancePayment}</p>
                                            <p><strong>Due:</strong> ₹${booking.remainingPayment}</p>
                                        `);

                                        // Show the modal
                                        const bookingModal = new bootstrap.Modal(document.getElementById('bookingModal'));
                                        bookingModal.show();
                                    } else {
                                        showToast('Booking details not found.', 'danger');
                                    }
                                });

                                $('.whatsapp-confirm').click(function() {
                                    const bookingId = $(this).data('id');
                                    // Implement WhatsApp confirmation functionality here
                                    const booking = filtered.find(b => b.bookingId === bookingId);
                                    if (booking) {
                                        sendWhatsAppConfirmation(booking);
                                    }
                                });
                            }).fail(function() {
                                // Handle error
                                $('#loading-indicator').hide();
                                $('#upcoming-events-list').html(`
                                    <div class="col-12">
                                        <div class="alert alert-danger">
                                            <i class="bi bi-exclamation-triangle-fill me-2"></i>
                                            Failed to load booking data. Please try again.
                                        </div>
                                    </div>
                                `);
                            });
                        }, 600); // Simulated loading delay
                    }

                           function sendWhatsAppConfirmation(booking) {
            const fromDate = formatDate(booking.fromDate);
            const phoneNumber = (booking.phoneNumber || '').replace(/\D/g, '');

            if (!phoneNumber) {
                showToast("No phone number available for this booking.", "danger");
                return;
            }

            const message = `Thank you Customer: ${booking.customerName || 'Customer'} for booking with us. Your booking for "${booking.eventName || 'Event'}" has been confirmed for ${fromDate}.`;

            const encodedMessage = encodeURIComponent(message);
            window.open(`https://wa.me/${phoneNumber}?text=${encodedMessage}`, '_blank');

            showToast('Confirmation message prepared for WhatsApp', 'success');
        }


                    // Helper function to show toast notifications
                    function showToast(message, type = 'info') {
                        // Check if the toast container exists, if not create it
                        let toastContainer = document.getElementById('toast-container');
                        if (!toastContainer) {
                            toastContainer = document.createElement('div');
                            toastContainer.id = 'toast-container';
                            toastContainer.className = 'position-fixed bottom-0 end-0 p-3';
                            document.body.appendChild(toastContainer);
                        }

                        // Create toast element
                        const toastId = 'toast-' + Date.now();
                        const toast = document.createElement('div');
                        toast.className = `toast align-items-center text-white bg-${type} border-0`;
                        toast.id = toastId;
                        toast.setAttribute('role', 'alert');
                        toast.setAttribute('aria-live', 'assertive');
                        toast.setAttribute('aria-atomic', 'true');

                        // Toast content
                        toast.innerHTML = `
                            <div class="d-flex">
                                <div class="toast-body">
                                    ${message}
                                </div>
                                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                            </div>
                        `;

                        // Add to container
                        toastContainer.appendChild(toast);

                        // Initialize and show the toast
                        const bsToast = new bootstrap.Toast(toast, {
                            autohide: true,
                            delay: 3000
                        });
                        bsToast.show();

                        // Remove from DOM after hidden
                        toast.addEventListener('hidden.bs.toast', function() {
                            toast.remove();
                        });
                    }

                    $('.filter-btn').click(function () {
                        const days = +$(this).data('days');
                        loadUpcomingEvents(days);
                    });

                    // Load default
                    loadUpcomingEvents(2);
                });
    </script>
</body>
</html>