<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Event Management - Register</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background: linear-gradient(135deg, #43cea2 0%, #185a9d 100%);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 40px 0;
        }
        
        .register-container {
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 14px 28px rgba(0,0,0,0.25), 
                        0 10px 10px rgba(0,0,0,0.22);
            overflow: hidden;
            width: 500px;
            max-width: 100%;
            padding: 30px;
            margin: 20px;
        }
        
        .app-title {
            text-align: center;
            margin-bottom: 20px;
            color: #185a9d;
        }
        
        .app-logo {
            font-size: 36px;
            margin-bottom: 10px;
            color: #43cea2;
        }
        
        h1 {
            font-weight: bold;
            margin-bottom: 15px;
            text-align: center;
        }
        
        p {
            font-size: 14px;
            font-weight: 100;
            line-height: 20px;
            letter-spacing: 0.5px;
            margin: 20px 0 30px;
            text-align: center;
        }
        
        form {
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        
        .form-row {
            display: flex;
            width: 100%;
            gap: 15px;
            margin-bottom: 15px;
        }
        
        .form-group {
            flex: 1;
            width: 100%;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: 500;
            color: #333;
        }
        
        input {
            background-color: #f8f9fa;
            border: 1px solid #ddd;
            border-radius: 4px;
            padding: 12px 15px;
            width: 100%;
            transition: border-color 0.3s;
        }
        
        input:focus {
            border-color: #43cea2;
            outline: none;
        }
        
        .btn {
            border-radius: 20px;
            border: none;
            background: linear-gradient(to right, #43cea2, #185a9d);
            color: #FFFFFF;
            font-size: 14px;
            font-weight: bold;
            padding: 12px 45px;
            letter-spacing: 1px;
            text-transform: uppercase;
            transition: all 0.3s ease;
            cursor: pointer;
            margin-top: 15px;
            width: 100%;
        }
        
        .btn:hover {
            background: linear-gradient(to right, #185a9d, #43cea2);
            transform: translateY(-2px);
            box-shadow: 0 7px 14px rgba(0, 0, 0, 0.18);
        }
        
        .btn:active {
            transform: translateY(0);
            box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
        }
        
        .alert {
            padding: 10px;
            margin: 10px 0;
            border-radius: 4px;
            display: none;
            width: 100%;
            text-align: center;
        }
        
        .alert-success {
            background-color: #d4edda;
            color: #155724;
        }
        
        .alert-error {
            background-color: #f8d7da;
            color: #721c24;
        }
        
        .terms {
            font-size: 12px;
            margin: 20px 0;
            text-align: center;
            color: #666;
        }
        
        .links {
            text-align: center;
            margin-top: 20px;
        }
        
        .links a {
            text-decoration: none;
            color: #185a9d;
            font-size: 14px;
            transition: color 0.3s;
        }
        
        .links a:hover {
            color: #43cea2;
        }
        
        .password-requirements {
            font-size: 12px;
            color: #666;
            margin-top: 5px;
        }
        
        .password-strength {
            height: 5px;
            width: 100%;
            background: #ddd;
            margin-top: 5px;
            border-radius: 3px;
            overflow: hidden;
        }
        
        .password-strength-meter {
            height: 100%;
            width: 0;
            transition: width 0.3s ease;
        }
        
        .strength-weak {
            background-color: #ff4d4d;
            width: 33.33%;
        }
        
        .strength-medium {
            background-color: #ffa64d;
            width: 66.66%;
        }
        
        .strength-strong {
            background-color: #43cea2;
            width: 100%;
        }
    </style>
</head>
<body>
    <div class="register-container">
        <div class="app-title">
            <div class="app-logo">📅</div>
            <h2>Event Manager</h2>
        </div>
        <h1>Create Account</h1>
        <p>Register to start managing your events</p>
        
        <div id="register-alert" class="alert"></div>
        
        <form id="register-form">
            <div class="form-row">
                <div class="form-group">
                    <label for="first-name">First Name</label>
                    <input type="text" id="first-name" placeholder="Enter your first name" required>
                </div>
                
                <div class="form-group">
                    <label for="last-name">Last Name</label>
                    <input type="text" id="last-name" placeholder="Enter your last name" required>
                </div>
            </div>
            
            <div class="form-group">
                <label for="email">Email</label>
                <input type="email" id="email" placeholder="Enter your email" required>
            </div>
            
            <div class="form-group">
                <label for="password">Password</label>
                <input type="password" id="password" placeholder="Create a password" required>
                <div class="password-strength">
                    <div id="password-strength-meter" class="password-strength-meter"></div>
                </div>
                <div class="password-requirements">
                    Password must be at least 8 characters, include uppercase, lowercase, number, and special character
                </div>
            </div>
            
            <div class="form-group">
                <label for="confirm-password">Confirm Password</label>
                <input type="password" id="confirm-password" placeholder="Confirm your password" required>
            </div>
            
            <div class="form-group">
                <label for="phone">Phone Number (Optional)</label>
                <input type="tel" id="phone" placeholder="Enter your phone number">
            </div>
            
            <div class="terms">
                By creating an account, you agree to our <a href="#" style="text-decoration: underline;">Terms of Service</a> and <a href="#" style="text-decoration: underline;">Privacy Policy</a>
            </div>
            
            <button type="submit" class="btn">Register</button>
        </form>
        
        <div class="links">
            Already have an account? <a href="login.html">Login here</a>
        </div>
    </div>

    <script>
        // Function to display alert messages
        function showAlert(element, message, type) {
            element.textContent = message;
            element.className = 'alert alert-' + type;
            element.style.display = 'block';
            
            // Hide the alert after 5 seconds
            setTimeout(function() {
                element.style.display = 'none';
            }, 5000);
        }
        
        // Function to send AJAX requests
        function sendAjaxRequest(method, url, data, successCallback, errorCallback) {
            const xhr = new XMLHttpRequest();
            xhr.open(method, url, true);
            xhr.setRequestHeader('Content-Type', 'application/json');
            xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
            
            xhr.onload = function() {
                if (xhr.status >= 200 && xhr.status < 300) {
                    successCallback(xhr.responseText);
                } else {
                    errorCallback(xhr.statusText);
                }
            };
            
            xhr.onerror = function() {
                errorCallback(xhr.statusText);
            };
            
            xhr.send(JSON.stringify(data));
        }
        
        // Password strength meter
        const passwordInput = document.getElementById('password');
        const strengthMeter = document.getElementById('password-strength-meter');
        
        passwordInput.addEventListener('input', function() {
            const password = passwordInput.value;
            let strength = 0;
            
            // Check password length
            if (password.length >= 8) {
                strength += 1;
            }
            
            // Check for uppercase letters
            if (/[A-Z]/.test(password)) {
                strength += 1;
            }
            
            // Check for lowercase letters
            if (/[a-z]/.test(password)) {
                strength += 1;
            }
            
            // Check for numbers
            if (/[0-9]/.test(password)) {
                strength += 1;
            }
            
            // Check for special characters
            if (/[^A-Za-z0-9]/.test(password)) {
                strength += 1;
            }
            
            // Update strength meter
            strengthMeter.className = 'password-strength-meter';
            
            if (password.length === 0) {
                strengthMeter.style.width = '0';
            } else if (strength <= 2) {
                strengthMeter.classList.add('strength-weak');
            } else if (strength <= 4) {
                strengthMeter.classList.add('strength-medium');
            } else {
                strengthMeter.classList.add('strength-strong');
            }
        });
        document.getElementById('register-form').addEventListener('submit', function (e) {
    e.preventDefault();

    const firstName = document.getElementById('first-name').value.trim();
    const lastName = document.getElementById('last-name').value.trim();
    const email = document.getElementById('email').value.trim();
    const password = document.getElementById('password').value.trim();
    const confirmPassword = document.getElementById('confirm-password').value.trim();
    const phone = document.getElementById('phone').value.trim();
    const registerAlert = document.getElementById('register-alert');

    // Validate form inputs
    if (!firstName || !lastName || !email || !password || !confirmPassword) {
        showAlert(registerAlert, 'Please fill in all required fields', 'error');
        return;
    }

    if (password !== confirmPassword) {
        showAlert(registerAlert, 'Passwords do not match', 'error');
        return;
    }

    // Email validation
    const emailRegex = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
    if (!emailRegex.test(email)) {
        showAlert(registerAlert, 'Please enter a valid email address', 'error');
        return;
    }

    // Password validation (minimum 8 characters with complexity)
    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@@$!%*?&])[A-Za-z\d@@$!%*?&]{8,}$/;
    if (!passwordRegex.test(password)) {
        showAlert(registerAlert, 'Password does not meet requirements', 'error');
        return;
    }

    // Prepare data for AJAX request
    const registerData = {
        firstName: firstName,
        lastName: lastName,
        email: email,
        password: password,
        phone: phone
    };

    // Show loading spinner
    showLoading();

    // Send AJAX request to the backend
    $.ajax({
        url: '/User/Register', // Backend endpoint for registration
        type: 'POST',
        contentType: 'application/json',
        data: JSON.stringify(registerData),
        success: function (response) {
            hideLoading();

            try {
                if (response.success) {
                    showAlert(registerAlert, 'Registration successful! Redirecting to login...', 'success');
                    // Redirect to login page after successful registration
                    setTimeout(function () {
                        window.location.href = '/User/Login';
                    }, 2000);
                } else {
                    showAlert(registerAlert, response.message || 'Registration failed. Please try again.', 'error');
                }
            } catch (e) {
                showAlert(registerAlert, 'An error occurred. Please try again.', 'error');
                console.error('Error parsing response:', e);
            }
        },
        error: function (xhr, status, error) {
            hideLoading();
            showAlert(registerAlert, 'Connection error. Please try again later.', 'error');
            console.error('AJAX error:', error);
        }
    });
});


        
    </script>
</body>
</html>