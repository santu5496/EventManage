<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Lodge Booking Calendar</title>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.css" />
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.js"></script>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>

    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            margin: 20px;
        }

        h1 {
            margin-bottom: 20px;
        }

        #calendar {
            width: 90%;
            margin: 20px auto;
        }

        /* Buttons styling */
        button {
            background-color: #007BFF;
            color: white;
            border: none;
            padding: 10px 20px;
            margin: 10px;
            font-size: 16px;
            cursor: pointer;
            border-radius: 5px;
        }

            button:hover {
                background-color: #0056b3;
            }

        /* Custom styling for day cells */
        .fc-daygrid-day {
            position: relative;
        }

        .day-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 1;
        }

        .morning-part {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 50%;
        }

        .evening-part {
            position: absolute;
            top: 50%;
            left: 0;
            width: 100%;
            height: 50%;
        }

        .morning-booked {
            background-color: #FF0000;
            opacity: 0.5;
        }

        .evening-booked {
            background-color: #00FF00;
            opacity: 0.5;
        }

        /* Make sure day numbers remain visible */
        .fc-daygrid-day-top {
            position: relative;
            z-index: 2;
        }

        /* Booking form styling */
        #booking-form {
            width: 350px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 8px;
            background-color: #f9f9f9;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            text-align: left;
        }

        .form-group {
            margin-bottom: 15px;
        }

        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }

        input[type="text"], select {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }

        #confirm-booking {
            background-color: #28a745;
            width: 100%;
            margin-top: 10px;
        }

            #confirm-booking:hover {
                background-color: #218838;
            }

        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.5);
        }

        .modal-content {
            background-color: #fefefe;
            margin: 10% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 90%;
            max-width: 500px;
            border-radius: 8px;
            position: relative;
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            padding-bottom: 10px;
            border-bottom: 1px solid #ddd;
        }

            .modal-header h2 {
                margin: 0;
                font-size: 20px;
            }

        .close-button {
            position: absolute;
            top: 10px;
            right: 10px;
            color: #aaa;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }

            .close-button:hover,
            .close-button:focus {
                color: #000;
                text-decoration: none;
            }

        .modal-body {
            margin-bottom: 15px;
            max-height: 60vh;
            overflow-y: auto;
        }

            .modal-body label {
                display: block;
                margin-bottom: 5px;
                font-weight: bold;
            }

            .modal-body input[type="text"],
            .modal-body input[type="number"],
            .modal-body input[type="date"],
            .modal-body select,
            .modal-body textarea {
                width: 100%;
                padding: 8px;
                border: 1px solid #ddd;
                border-radius: 4px;
                box-sizing: border-box;
                margin-bottom: 10px;
            }

            .modal-body textarea {
                resize: vertical;
            }

        .modal-footer {
            text-align: right;
        }

            .modal-footer button {
                padding: 10px 20px;
                border: none;
                border-radius: 5px;
                cursor: pointer;
                font-size: 16px;
            }

            .modal-footer .btn-primary {
                background-color: #007BFF;
                color: white;
                margin-right: 10px;
            }

                .modal-footer .btn-primary:hover {
                    background-color: #0056b3;
                }

            .modal-footer .btn-secondary {
                background-color: #e9ecef;
                color: #495057;
            }

                .modal-footer .btn-secondary:hover {
                    background-color: #d3d9df;
                }

        .selected-day {
            background-color: #e6f2ff !important;
        }

        /* Loading spinner */
        .spinner {
            display: none;
            margin: 0 auto;
            width: 50px;
            height: 50px;
            border: 3px solid #f3f3f3;
            border-radius: 50%;
            border-top: 3px solid #3498db;
            animation: spin 1s linear infinite;
        }

        @@keyframes spin {
            0%

        {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }

        }

        /* Tooltip styling */
        .booking-tooltip {
            position: absolute;
            background-color: white;
            border: 1px solid #ddd;
            padding: 10px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            z-index: 100;
            display: none;
        }

        /* Error message styling */
        .error-message {
            color: red;
            margin-top: 5px;
            font-size: 14px;
        }

        .success-message {
            color: green;
            margin-top: 5px;
            font-size: 14px;
        }
    </style>
</head>
<body>

    <h1>Lodge Booking Calendar</h1>

    <div id="bookingModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2>Add / Update Booking</h2>
                <span class="close-button">&times;</span>
            </div>
            <div class="modal-body">
                <div hidden class="form-group">
                    <label>Booking ID</label>
                    <input type="number" id="bookingId" class="ClearBookingModalData" />
                </div>
                <div class="form-group">
                    <label>User ID</label>
                    <input type="number" id="userId" class="ClearBookingModalData" required />
                </div>
                <div class="form-group">
                    <label>Event</label>
                    <select id="eventId" class="ClearBookingModalData" required>
                        <option value="">-- Select Event --</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>Booking Date</label>
                    <input type="date" id="bookingDate" class="ClearBookingModalData" required />
                </div>
                <div class="form-group">
                    <label>From Date</label>
                    <input type="date" id="fromDate" class="ClearBookingModalData" required />
                </div>
                <div class="form-group">
                    <label>To Date</label>
                    <input type="date" id="toDate" class="ClearBookingModalData" required />
                </div>
                <div class="form-group">
                    <label>Shift Type</label>
                    <select id="shiftType" class="ClearBookingModalData" required>
                        <option value="">-- Select Shift --</option>
                        <option value="morning">Morning</option>
                        <option value="evening">Evening</option>
                        <option value="fullday">Full Day</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>Booking Status</label>
                    <select id="bookingStatus" class="ClearBookingModalData" required>
                        <option value="">-- Select Status --</option>
                        <option value="Confirmed">Confirmed</option>
                        <option value="Pending">Pending</option>
                        <option value="Cancelled">Cancelled</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>Total Amount</label>
                    <input type="number" id="totalAmount" class="ClearBookingModalData" required />
                </div>
                <div class="form-group">
                    <label>Advance Payment</label>
                    <input type="number" id="advancePayment" class="ClearBookingModalData" />
                </div>
                <div class="form-group">
                    <label>Remaining Payment</label>
                    <input type="number" id="remainingPayment" class="ClearBookingModalData" readonly />
                </div>
                <div class="form-group">
                    <label>Payment Status</label>
                    <select id="paymentStatus" class="ClearBookingModalData" required>
                        <option value="">-- Select Payment Status --</option>
                        <option value="Paid">Paid</option>
                        <option value="Partially Paid">Partially Paid</option>
                        <option value="Pending">Pending</option>
                    </select>
                </div>
                <div hidden class="form-group">
                    <label>Created Date</label>
                    <input type="date" id="createdDate" class="ClearBookingModalData" />
                </div>
                <div class="form-group">
                    <label>Customer Name</label>
                    <input type="text" id="customerName" class="ClearBookingModalData" required />
                </div>
                <div class="form-group">
                    <label>Phone Number</label>
                    <input type="text" id="phoneNumber" class="ClearBookingModalData" required />
                </div>
                <div class="form-group">
                    <label>Alternative Number</label>
                    <input type="text" id="alternativeNumber" class="ClearBookingModalData" />
                </div>
                <div class="form-group">
                    <label>Address</label>
                    <textarea id="address" class="ClearBookingModalData"></textarea>
                </div>
                <div id="modal-message" class="success-message"></div>
            </div>
            <div class="modal-footer">
                <button type="button" id="save-booking" class="btn btn-primary">Save</button>
                <button type="button" id="close-booking-modal" class="btn btn-secondary">Close</button>
            </div>
        </div>
    </div>

    <div id="booking-form">
        <h3>Quick Booking</h3>
        <div class="form-group">
            <label for="booking-date">Select Date:</label>
            <input type="text" id="booking-date" placeholder="Click to select date" readonly>
        </div>
        <div class="form-group">
            <label for="booking-shift">Select Shift:</label>
            <select id="booking-shift">
                <option value="">-- Select Shift --</option>
                <option value="morning">Morning</option>
                <option value="evening">Evening</option>
                <option value="fullday">Full Day</option>
            </select>
        </div>
        <button id="quick-book">Quick Book</button>
    </div>

    <div>
        <button id="fetch-bookings">Fetch All Bookings</button>
        <button id="open-booking-modal">New Booking</button>
    </div>

    <div id="spinner" class="spinner"></div>
    <div id="message" class="success-message"></div>
    <div id="calendar"></div>

    <div id="booking-tooltip" class="booking-tooltip"></div>
    <script>

   document.addEventListener('DOMContentLoaded', function () {
    // Global variables
    var calendarEl = document.getElementById('calendar');
    var bookingData = {}; // Stores all booking data
    var selectedDate = null; // Currently selected date
    var calendar;
    var bookingModal = document.getElementById('bookingModal');
    var bookingModalCloseBtn = document.getElementsByClassName('close-button')[0];
    var closeBookingModalBtn = document.getElementById('close-booking-modal');
    var openBookingModalBtn = document.getElementById('open-booking-modal');
    var saveBookingBtn = document.getElementById('save-booking');
    var quickBookBtn = document.getElementById('quick-book');
    var fetchBookingsBtn = document.getElementById('fetch-bookings');
    var spinner = document.getElementById('spinner');
    var messageEl = document.getElementById('message');
    var modalMessageEl = document.getElementById('modal-message');
    var tooltip = document.getElementById('booking-tooltip');

    // Initialize FullCalendar
    calendar = new FullCalendar.Calendar(calendarEl, {
        initialView: 'dayGridMonth',
        selectable: true,
        headerToolbar: {
            left: 'prev,next today',
            center: 'title',
            right: 'dayGridMonth,dayGridWeek'
        },
        datesSet: function() {
            setTimeout(function() {
                setupDayCells();
                fetchBookings(); // Fetch bookings when month changes
            }, 100);
        },
        dateClick: function(info) {
            var dateClicked = info.dateStr;
            selectedDate = dateClicked;
            
            // Set dates in form
            $('#bookingDate').val(dateClicked);
            $('#fromDate').val(dateClicked);
            $('#toDate').val(dateClicked);
            
            // Highlight selected cell
            $('.fc-day').removeClass('selected-day');
            $(info.dayEl).addClass('selected-day');
            
            // Check booking status for this date
            var bookingsForDate = bookingData[dateClicked];
            
            if (!bookingsForDate || bookingsForDate.details.length === 0) {
                // No bookings - open new booking modal
                openBookingModal(dateClicked);
            } else {
                // Check what's booked
                var morningBooked = bookingsForDate.morning;
                var eveningBooked = bookingsForDate.evening;
                
                if (!morningBooked && !eveningBooked) {
                    openBookingModal(dateClicked);
                } else if (morningBooked && eveningBooked) {
                    // Both shifts booked - show edit/delete options
                    showBookingOptions(dateClicked, 'both');
                } else {
                    // Partially booked - ask which shift to book/edit
                    showBookingOptions(dateClicked, morningBooked ? 'evening' : 'morning');
                }
            }
        }
    });

    // Initialize the calendar
    calendar.render();

    // Initialize jQuery UI Datepicker
    $('#booking-date').datepicker({
        dateFormat: 'yy-mm-dd',
        minDate: 0,
        onSelect: function(dateText) {
            selectedDate = dateText;
            $('.fc-day').removeClass('selected-day');
            $('.fc-day[data-date="' + selectedDate + '"]').addClass('selected-day');
        }
    });

    // Event listeners
    saveBookingBtn.addEventListener('click', saveBooking);
    quickBookBtn.addEventListener('click', quickBook);
    fetchBookingsBtn.addEventListener('click', fetchBookings);
    openBookingModalBtn.addEventListener('click', function() {
        openBookingModal();
    });
    closeBookingModalBtn.addEventListener('click', closeBookingModal);
    bookingModalCloseBtn.addEventListener('click', closeBookingModal);
    window.addEventListener('click', function(event) {
        if (event.target === bookingModal) {
            closeBookingModal();
        }
    });

    // Payment calculation
    $('#totalAmount, #advancePayment').on('input', calculateRemainingPayment);

    // ========== CORE FUNCTIONS ========== //

    function setupDayCells() {
        var dayCells = document.querySelectorAll('.fc-daygrid-day');
        dayCells.forEach(function(cell) {
            var dateStr = cell.getAttribute('data-date');
            if (!cell.querySelector('.day-overlay')) {
                var overlay = document.createElement('div');
                overlay.className = 'day-overlay';
                overlay.id = 'overlay-' + dateStr;

                var morningPart = document.createElement('div');
                morningPart.className = 'morning-part';
                morningPart.id = 'morning-' + dateStr;

                var eveningPart = document.createElement('div');
                eveningPart.className = 'evening-part';
                eveningPart.id = 'evening-' + dateStr;

                overlay.appendChild(morningPart);
                overlay.appendChild(eveningPart);
                cell.appendChild(overlay);
            }
        });
    }

    function fetchBookings() {
        showSpinner();
        showMessage("Fetching bookings...");

        $.ajax({
            url: '/EventBooking/GetAllEventBookings',
            type: 'GET',
            dataType: 'json',
            success: function(data) {
                hideSpinner();
                if (data && Array.isArray(data)) {
                    bookingData = {};
                    data.forEach(function(booking) {
                        var fromDate = new Date(booking.fromDate);
                        var toDate = new Date(booking.toDate);
                        var currentDate = new Date(fromDate);

                        while (currentDate <= toDate) {
                            var dateStr = formatDate(currentDate);

                            if (!bookingData[dateStr]) {
                                bookingData[dateStr] = {
                                    morning: false,
                                    evening: false,
                                    details: []
                                };
                            }

                            if (booking.shiftType === 'morning' || booking.shiftType === 'fullday') {
                                bookingData[dateStr].morning = true;
                            }

                            if (booking.shiftType === 'evening' || booking.shiftType === 'fullday') {
                                bookingData[dateStr].evening = true;
                            }

                            bookingData[dateStr].details.push(booking);
                            currentDate.setDate(currentDate.getDate() + 1);
                        }
                    });
                    renderAllBookings();
                    showMessage("Bookings loaded successfully!", "success");
                } else {
                    showMessage("No bookings found.", "error");
                }
            },
            error: function(error) {
                hideSpinner();
                console.error('Error fetching bookings:', error);
                showMessage("Failed to fetch bookings.", "error");
            }
        });
    }

    function populateEventDropdown() {
        $.ajax({
            url: '/EventCrud/GetAllEvents',
            type: 'GET',
            dataType: 'json',
            success: function(data) {
                if (data && data.length > 0) {
                    var eventDropdown = $('#eventId');
                    eventDropdown.empty().append($('<option>', {
                        value: '',
                        text: '-- Select Event --'
                    }));
                    $.each(data, function(i, event) {
                        eventDropdown.append($('<option>', {
                            value: event.eventId,
                            text: event.eventName
                        }));
                    });
                } else {
                    showModalMessage("No events found.", "error");
                }
            },
            error: function(error) {
                console.error('Error fetching events:', error);
                showModalMessage("Failed to load events.", "error");
            }
        });
    }

    function openBookingModal(date = null) {
        clearBookingModalData();
        $('#createdDate').val(formatDate(new Date()));
        
        if (date) {
            $('#bookingDate').val(date);
            $('#fromDate').val(date);
            $('#toDate').val(date);
        }
        
        populateEventDropdown();
        bookingModal.style.display = "block";
    }

    function closeBookingModal() {
        bookingModal.style.display = "none";
        clearBookingModalData();
        hideModalMessage();
    }

    function clearBookingModalData() {
        $('.ClearBookingModalData').val('');
        hideModalMessage();
    }

    function saveBooking() {
        if (!validateBookingForm()) return;
        
        showModalMessage("Saving booking...");

        var bookingData = {
            bookingId: $('#bookingId').val() || 0,
            userId: $('#userId').val(),
            eventId: $('#eventId').val(),
            bookingDate: $('#bookingDate').val(),
            fromDate: $('#fromDate').val(),
            toDate: $('#toDate').val(),
            shiftType: $('#shiftType').val(),
            bookingStatus: $('#bookingStatus').val(),
            totalAmount: $('#totalAmount').val(),
            advancePayment: $('#advancePayment').val() || 0,
            remainingPayment: $('#remainingPayment').val(),
            paymentStatus: $('#paymentStatus').val(),
            createdDate: $('#createdDate').val() || formatDate(new Date()),
            customerName: $('#customerName').val(),
            phoneNumber: $('#phoneNumber').val(),
            alternativeNumber: $('#alternativeNumber').val() || "",
            address: $('#address').val() || ""
        };

        $.ajax({
            url: '/EventBooking/AddOrUpdateEventBooking',
            type: 'POST',
            data: { eventBooking: bookingData },
            dataType: 'json',
            success: function(response) {
                if (response && response.success) {
                    showModalMessage("Booking saved!", "success");
                    setTimeout(function() {
                        closeBookingModal();
                        fetchBookings();
                    }, 1500);
                } else {
                    showModalMessage(response.message || "Failed to save.", "error");
                }
            },
            error: function(error) {
                console.error('Error saving booking:', error);
                showModalMessage("Failed to save.", "error");
            }
        });
    }

    function quickBook() {
        var selectedShift = $('#booking-shift').val();
        var date = $('#booking-date').val();

        if (!date) {
            alert("Please select a date.");
            return;
        }

        if (!selectedShift) {
            alert("Please select a shift.");
            return;
        }

        openBookingModal(date);
        $('#shiftType').val(selectedShift);
        setTimeout(function() {
            $('#customerName').focus();
        }, 300);
    }

    // ========== NEW SMART BOOKING FUNCTIONS ========== //

    function showBookingOptions(date, availability) {
        var modalContent = `
            <div style="padding: 20px; text-align: center;">
                <h3>Booking Options for ${date}</h3>`;
        
        if (availability === 'both') {
            modalContent += `
                <p>Both shifts are booked</p>
                <button onclick="editExistingBooking('${date}')" class="btn btn-primary" style="margin: 10px;">
                    Edit Booking
                </button>
                <button onclick="deleteExistingBooking('${date}')" class="btn btn-danger" style="margin: 10px;">
                    Delete Booking
                </button>`;
        } else {
            var availableShift = availability === 'morning' ? 'Morning' : 'Evening';
            modalContent += `
                <p>${availableShift} shift is available</p>
                <button onclick="bookNewShift('${date}', '${availability}')" class="btn btn-success" style="margin: 10px;">
                    Book ${availableShift} Shift
                </button>`;
            
            if (availability === 'evening') {
                modalContent += `
                    <button onclick="editMorningBooking('${date}')" class="btn btn-primary" style="margin: 10px;">
                        Edit Morning Booking
                    </button>`;
            } else {
                modalContent += `
                    <button onclick="editEveningBooking('${date}')" class="btn btn-primary" style="margin: 10px;">
                        Edit Evening Booking
                    </button>`;
            }
        }
        
        modalContent += `</div>`;
        
        $('#bookingModal .modal-body').html(modalContent);
        bookingModal.style.display = "block";
    }

    window.editExistingBooking = function(date) {
        var booking = bookingData[date].details[0];
        populateBookingForm(booking);
    };

    window.deleteExistingBooking = function(date) {
        var booking = bookingData[date].details[0];
        if (confirm(`Delete booking for ${booking.customerName}?`)) {
            deleteBooking(booking.bookingId);
        }
    };

    window.bookNewShift = function(date, shift) {
        openBookingModal(date);
        $('#shiftType').val(shift);
    };

    window.editMorningBooking = function(date) {
        var booking = bookingData[date].details.find(b => 
            b.shiftType === 'morning' || b.shiftType === 'fullday');
        if (booking) populateBookingForm(booking);
    };

    window.editEveningBooking = function(date) {
        var booking = bookingData[date].details.find(b => 
            b.shiftType === 'evening' || b.shiftType === 'fullday');
        if (booking) populateBookingForm(booking);
    };

    function populateBookingForm(booking) {
        clearBookingModalData();
        
        $('#bookingId').val(booking.bookingId);
        $('#userId').val(booking.userId);
        $('#eventId').val(booking.eventId);
        $('#bookingDate').val(formatDate(new Date(booking.bookingDate)));
        $('#fromDate').val(formatDate(new Date(booking.fromDate)));
        $('#toDate').val(formatDate(new Date(booking.toDate)));
        $('#shiftType').val(booking.shiftType);
        $('#bookingStatus').val(booking.bookingStatus);
        $('#totalAmount').val(booking.totalAmount);
        $('#advancePayment').val(booking.advancePayment);
        $('#remainingPayment').val(booking.remainingPayment);
        $('#paymentStatus').val(booking.paymentStatus);
        $('#createdDate').val(formatDate(new Date(booking.createdDate)));
        $('#customerName').val(booking.customerName);
        $('#phoneNumber').val(booking.phoneNumber);
        $('#alternativeNumber').val(booking.alternativeNumber);
        $('#address').val(booking.address);
        
        // Show the form
        $('#bookingModal .modal-body').html(document.getElementById('bookingModal').querySelector('.modal-body').innerHTML);
        
        // Re-populate values
        Object.keys(booking).forEach(key => {
            if ($('#' + key).length) {
                $('#' + key).val(booking[key]);
            }
        });
        
        calculateRemainingPayment();
    }

    window.deleteBooking = function(bookingId) {
        if (confirm("Are you sure you want to delete this booking?")) {
            showSpinner();
            $.ajax({
                url: '/EventBooking/DeleteEventBooking',
                type: 'POST',
                data: { id: bookingId },
                dataType: 'json',
                success: function(response) {
                    hideSpinner();
                    if (response && response.success) {
                        showMessage("Booking deleted!", "success");
                        fetchBookings();
                    } else {
                        showMessage(response.message || "Failed to delete.", "error");
                    }
                },
                error: function(error) {
                    hideSpinner();
                    console.error('Error deleting booking:', error);
                    showMessage("Failed to delete.", "error");
                }
            });
        }
    };

    // ========== HELPER FUNCTIONS ========== //

    function renderAllBookings() {
        Object.keys(bookingData).forEach(function(date) {
            renderBooking(date);
        });
    }

    function renderBooking(date) {
        $('#morning-' + date).removeClass('morning-booked');
        $('#evening-' + date).removeClass('evening-booked');

        if (bookingData[date]) {
            if (bookingData[date].morning) {
                $('#morning-' + date).addClass('morning-booked');
            }
            if (bookingData[date].evening) {
                $('#evening-' + date).addClass('evening-booked');
            }
        }
    }

    function validateBookingForm() {
        var required = ['userId', 'eventId', 'bookingDate', 'fromDate', 'toDate',
                       'shiftType', 'bookingStatus', 'totalAmount', 'paymentStatus',
                       'customerName', 'phoneNumber'];
        var valid = true;
        
        required.forEach(function(field) {
            var value = $('#' + field).val();
            if (!value) {
                $('#' + field).css('border-color', 'red');
                valid = false;
            } else {
                $('#' + field).css('border-color', '');
            }
        });

        if (!valid) {
            showModalMessage("Please fill all required fields.", "error");
        }
        return valid;
    }

    function calculateRemainingPayment() {
        var total = parseFloat($('#totalAmount').val()) || 0;
        var advance = parseFloat($('#advancePayment').val()) || 0;
        var remaining = total - advance;

        $('#remainingPayment').val(remaining >= 0 ? remaining : 0);

        if (remaining <= 0 && total > 0) {
            $('#paymentStatus').val('Paid');
        } else if (advance > 0 && advance < total) {
            $('#paymentStatus').val('Partially Paid');
        } else {
            $('#paymentStatus').val('Pending');
        }
    }

    function showSpinner() {
        spinner.style.display = 'block';
    }

    function hideSpinner() {
        spinner.style.display = 'none';
    }

    function showMessage(text, type = "") {
        messageEl.textContent = text;
        messageEl.className = type === "error" ? "error-message" : "success-message";
        setTimeout(function() {
            messageEl.textContent = "";
        }, 5000);
    }

    function showModalMessage(text, type = "") {
        modalMessageEl.textContent = text;
        modalMessageEl.className = type === "error" ? "error-message" : "success-message";
    }

    function hideModalMessage() {
        modalMessageEl.textContent = "";
    }

    function formatDate(date) {
        var year = date.getFullYear();
        var month = String(date.getMonth() + 1).padStart(2, '0');
        var day = String(date.getDate()).padStart(2, '0');
        return year + '-' + month + '-' + day;
    }

    // Initial setup
    setupDayCells();
    fetchBookings();
});
    </script>
</body>
</html>