<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Lodge Booking Calendar</title>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.css" />
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.js"></script>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>

    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            margin: 20px;
        }

        h1 {
            margin-bottom: 20px;
        }

        #calendar {
            width: 90%;
            margin: 20px auto;
        }

        /* Buttons styling */
        button {
            background-color: #007BFF;
            color: white;
            border: none;
            padding: 10px 20px;
            margin: 10px;
            font-size: 16px;
            cursor: pointer;
            border-radius: 5px;
        }

            button:hover {
                background-color: #0056b3;
            }

        /* Custom styling for day cells */
        .fc-daygrid-day {
            position: relative;
        }

        .day-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 1;
        }

        .morning-part {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 50%;
        }

        .evening-part {
            position: absolute;
            top: 50%;
            left: 0;
            width: 100%;
            height: 50%;
        }

        .morning-booked {
            background-color: #FF0000;
            opacity: 0.5;
        }

        .evening-booked {
            background-color: #00FF00;
            opacity: 0.5;
        }

        /* Make sure day numbers remain visible */
        .fc-daygrid-day-top {
            position: relative;
            z-index: 2;
        }

        /* Booking form styling */
        #booking-form {
            width: 350px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 8px;
            background-color: #f9f9f9;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            text-align: left;
        }

        .form-group {
            margin-bottom: 15px;
        }

        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }

        input[type="text"], select {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }

        #confirm-booking {
            background-color: #28a745;
            width: 100%;
            margin-top: 10px;
        }

            #confirm-booking:hover {
                background-color: #218838;
            }

        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.5);
        }

        .modal-content {
            background-color: #fefefe;
            margin: 10% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 90%;
            max-width: 500px;
            border-radius: 8px;
            position: relative;
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            padding-bottom: 10px;
            border-bottom: 1px solid #ddd;
        }

            .modal-header h2 {
                margin: 0;
                font-size: 20px;
            }

        .close-button {
            position: absolute;
            top: 10px;
            right: 10px;
            color: #aaa;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }

            .close-button:hover,
            .close-button:focus {
                color: #000;
                text-decoration: none;
            }

        .modal-body {
            margin-bottom: 15px;
            max-height: 60vh;
            overflow-y: auto;
        }

            .modal-body label {
                display: block;
                margin-bottom: 5px;
                font-weight: bold;
            }

            .modal-body input[type="text"],
            .modal-body input[type="number"],
            .modal-body input[type="date"],
            .modal-body select,
            .modal-body textarea {
                width: 100%;
                padding: 8px;
                border: 1px solid #ddd;
                border-radius: 4px;
                box-sizing: border-box;
                margin-bottom: 10px;
            }

            .modal-body textarea {
                resize: vertical;
            }

        .modal-footer {
            text-align: right;
        }

            .modal-footer button {
                padding: 10px 20px;
                border: none;
                border-radius: 5px;
                cursor: pointer;
                font-size: 16px;
            }

            .modal-footer .btn-primary {
                background-color: #007BFF;
                color: white;
                margin-right: 10px;
            }

                .modal-footer .btn-primary:hover {
                    background-color: #0056b3;
                }

            .modal-footer .btn-secondary {
                background-color: #e9ecef;
                color: #495057;
            }

                .modal-footer .btn-secondary:hover {
                    background-color: #d3d9df;
                }

        .selected-day {
            background-color: #e6f2ff !important;
        }

        /* Loading spinner */
        .spinner {
            display: none;
            margin: 0 auto;
            width: 50px;
            height: 50px;
            border: 3px solid #f3f3f3;
            border-radius: 50%;
            border-top: 3px solid #3498db;
            animation: spin 1s linear infinite;
        }

        @@keyframes spin {
            0%

        {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }

        }

        /* Tooltip styling */
        .booking-tooltip {
            position: absolute;
            background-color: white;
            border: 1px solid #ddd;
            padding: 10px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            z-index: 100;
            display: none;
        }

        /* Error message styling */
        .error-message {
            color: red;
            margin-top: 5px;
            font-size: 14px;
        }

        .success-message {
            color: green;
            margin-top: 5px;
            font-size: 14px;
        }
    </style>
</head>
<body>

    <h1>Lodge Booking Calendar</h1>

    <div id="bookingModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2>Add / Update Booking</h2>
                <span class="close-button">&times;</span>
            </div>
            <div class="modal-body">
                <div hidden class="form-group">
                    <label>Booking ID</label>
                    <input type="number" id="bookingId" class="ClearBookingModalData" />
                </div>
                <div class="form-group">
                    <label>User ID</label>
                    <input type="number" id="userId" class="ClearBookingModalData" required />
                </div>
                <div class="form-group">
                    <label>Event</label>
                    <select id="eventId" class="ClearBookingModalData" required>
                        <option value="">-- Select Event --</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>Booking Date</label>
                    <input type="date" id="bookingDate" class="ClearBookingModalData" required />
                </div>
                <div class="form-group">
                    <label>From Date</label>
                    <input type="date" id="fromDate" class="ClearBookingModalData" required />
                </div>
                <div class="form-group">
                    <label>To Date</label>
                    <input type="date" id="toDate" class="ClearBookingModalData" required />
                </div>
                <div class="form-group">
                    <label>Shift Type</label>
                    <select id="shiftType" class="ClearBookingModalData" required>
                        <option value="">-- Select Shift --</option>
                        <option value="morning">Morning</option>
                        <option value="evening">Evening</option>
                        <option value="fullday">Full Day</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>Booking Status</label>
                    <select id="bookingStatus" class="ClearBookingModalData" required>
                        <option value="">-- Select Status --</option>
                        <option value="Confirmed">Confirmed</option>
                        <option value="Pending">Pending</option>
                        <option value="Cancelled">Cancelled</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>Total Amount</label>
                    <input type="number" id="totalAmount" class="ClearBookingModalData" required />
                </div>
                <div class="form-group">
                    <label>Advance Payment</label>
                    <input type="number" id="advancePayment" class="ClearBookingModalData" />
                </div>
                <div class="form-group">
                    <label>Remaining Payment</label>
                    <input type="number" id="remainingPayment" class="ClearBookingModalData" readonly />
                </div>
                <div class="form-group">
                    <label>Payment Status</label>
                    <select id="paymentStatus" class="ClearBookingModalData" required>
                        <option value="">-- Select Payment Status --</option>
                        <option value="Paid">Paid</option>
                        <option value="Partially Paid">Partially Paid</option>
                        <option value="Pending">Pending</option>
                    </select>
                </div>
                <div hidden class="form-group">
                    <label>Created Date</label>
                    <input type="date" id="createdDate" class="ClearBookingModalData" />
                </div>
                <div class="form-group">
                    <label>Customer Name</label>
                    <input type="text" id="customerName" class="ClearBookingModalData" required />
                </div>
                <div class="form-group">
                    <label>Phone Number</label>
                    <input type="text" id="phoneNumber" class="ClearBookingModalData" required />
                </div>
                <div class="form-group">
                    <label>Alternative Number</label>
                    <input type="text" id="alternativeNumber" class="ClearBookingModalData" />
                </div>
                <div class="form-group">
                    <label>Address</label>
                    <textarea id="address" class="ClearBookingModalData"></textarea>
                </div>
                <div id="modal-message" class="success-message"></div>
            </div>
            <div class="modal-footer">
                <button type="button" id="save-booking" class="btn btn-primary">Save</button>
                <button type="button" id="close-booking-modal" class="btn btn-secondary">Close</button>
            </div>
        </div>
    </div>

    <div id="booking-form">
        <h3>Quick Booking</h3>
        <div class="form-group">
            <label for="booking-date">Select Date:</label>
            <input type="text" id="booking-date" placeholder="Click to select date" readonly>
        </div>
        <div class="form-group">
            <label for="booking-shift">Select Shift:</label>
            <select id="booking-shift">
                <option value="">-- Select Shift --</option>
                <option value="morning">Morning</option>
                <option value="evening">Evening</option>
                <option value="fullday">Full Day</option>
            </select>
        </div>
        <button id="quick-book">Quick Book</button>
    </div>

    <div>
        <button id="fetch-bookings">Fetch All Bookings</button>
        <button id="open-booking-modal">New Booking</button>
    </div>

    <div id="spinner" class="spinner"></div>
    <div id="message" class="success-message"></div>
    <div id="calendar"></div>

    <div id="booking-tooltip" class="booking-tooltip"></div>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Global variables
            var calendarEl = document.getElementById('calendar');
            var bookingData = {};
            var selectedDate = null;
            var calendar;
            var bookingModal = document.getElementById('bookingModal');
            var originalModalContent = $('#bookingModal .modal-body').html();

            // Initialize FullCalendar
            calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                selectable: true,
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,dayGridWeek'
                },
                datesSet: function() {
                    setTimeout(function() {
                        setupDayCells();
                        fetchBookings();
                    }, 100);
                },
                dateClick: function(info) {
                    handleDateClick(info);
                }
            });
            calendar.render();

            // Initialize datepicker
            $('#booking-date').datepicker({
                dateFormat: 'yy-mm-dd',
                minDate: 0,
                onSelect: function(dateText) {
                    selectedDate = dateText;
                    $('.fc-day').removeClass('selected-day');
                    $('.fc-day[data-date="' + selectedDate + '"]').addClass('selected-day');
                }
            });

            // Event listeners
            $('#save-booking').click(saveBooking);
            $('#quick-book').click(quickBook);
            $('#fetch-bookings').click(fetchBookings);
            $('#open-booking-modal').click(function() { openBookingModal(); });
            $('#close-booking-modal, .close-button').click(closeBookingModal);
            $('#totalAmount, #advancePayment').on('input', calculateRemainingPayment);

            // ========== CORE FUNCTIONS ========== //

            function setupDayCells() {
                $('.fc-daygrid-day').each(function() {
                    var dateStr = $(this).attr('data-date');
                    if (!$(this).find('.day-overlay').length) {
                        $(this).append(`
                            <div class="day-overlay" id="overlay-${dateStr}">
                                <div class="morning-part" id="morning-${dateStr}"></div>
                                <div class="evening-part" id="evening-${dateStr}"></div>
                            </div>
                        `);
                    }
                });
            }

            function fetchBookings() {
                showSpinner();
                $.ajax({
                    url: '/EventBooking/GetAllEventBookings',
                    type: 'GET',
                    success: function(data) {
                        if (data && Array.isArray(data)) {
                            bookingData = {};
                            data.forEach(function(booking) {
                                processBooking(booking);
                            });
                            renderAllBookings();
                            showMessage("Bookings loaded successfully!", "success");
                        }
                    },
                    error: function(xhr, status, error) {
                        showMessage("Error loading bookings: " + error, "error");
                    },
                    complete: function() {
                        hideSpinner();
                    }
                });
            }

            function processBooking(booking) {
                var fromDate = new Date(booking.fromDate);
                var toDate = new Date(booking.toDate);
                var currentDate = new Date(fromDate);

                while (currentDate <= toDate) {
                    var dateStr = formatDate(currentDate);
                    if (!bookingData[dateStr]) {
                        bookingData[dateStr] = { morning: false, evening: false, details: [] };
                    }

                    if (booking.shiftType === 'morning' || booking.shiftType === 'fullday') {
                        bookingData[dateStr].morning = true;
                    }
                    if (booking.shiftType === 'evening' || booking.shiftType === 'fullday') {
                        bookingData[dateStr].evening = true;
                    }

                    bookingData[dateStr].details.push(booking);
                    currentDate.setDate(currentDate.getDate() + 1);
                }
            }

            function handleDateClick(info) {
                selectedDate = info.dateStr;
                $('.fc-day').removeClass('selected-day');
                $(info.dayEl).addClass('selected-day');

                $('#booking-date').datepicker('setDate', new Date(selectedDate));

                var bookings = bookingData[selectedDate];
                if (!bookings || bookings.details.length === 0) {
                    openBookingModal(selectedDate);
                } else {
                    showBookingOptions(selectedDate, bookings);
                }
            }

            function showBookingOptions(date, bookings) {
                var morningBooked = bookings.morning;
                var eveningBooked = bookings.evening;
                var content = `<div class="booking-options"><h3>${date}</h3>`;

                if (morningBooked && eveningBooked) {
                    content += `
                        <p>Both shifts booked</p>
                        <button class="btn btn-primary edit-btn" data-shift="morning">Edit Morning</button>
                        <button class="btn btn-primary edit-btn" data-shift="evening">Edit Evening</button>
                        <button class="btn btn-danger delete-btn">Delete Booking</button>`;
                } else if (morningBooked) {
                    content += `
                        <p>Morning booked</p>
                        <button class="btn btn-primary edit-btn" data-shift="morning">Edit Morning</button>
                        <button class="btn btn-success book-btn" data-shift="evening">Book Evening</button>`;
                } else if (eveningBooked) {
                    content += `
                        <p>Evening booked</p>
                        <button class="btn btn-primary edit-btn" data-shift="evening">Edit Evening</button>
                        <button class="btn btn-success book-btn" data-shift="morning">Book Morning</button>`;
                } else {
                    content += `
                        <p>No bookings for this date.</p>
                        <button class="btn btn-success book-btn" data-shift="morning">Book Morning</button>
                        <button class="btn btn-success book-btn" data-shift="evening">Book Evening</button>
                        <button class="btn btn-success book-btn" data-shift="fullday">Book Full Day</button>`;
                }

                content += `</div>`;
                $('#bookingModal .modal-body').html(content);
                bookingModal.style.display = "block";

                // Bind event handlers
                $('.edit-btn').click(function() {
                    var shift = $(this).data('shift');
                    editBooking(date, shift);
                });

                $('.book-btn').click(function() {
                    var shift = $(this).data('shift');
                    openBookingModal(date, shift);
                });

                $('.delete-btn').click(function() {
                    deleteBookingPrompt(date);
                });
            }

            function editBooking(date, shift) {
                var booking = bookingData[date].details.find(b =>
                    b.shiftType === shift || b.shiftType === 'fullday');
                if (booking) {
                    openBookingModal(date);
                    populateBookingForm(booking);
                }
            }

            function deleteBookingPrompt(date) {
                var bookings = bookingData[date].details;
                if (bookings.length === 1) {
                    if (confirm(`Delete booking for ${bookings[0].customerName}?`)) {
                        deleteBooking(bookings[0].bookingId);
                    }
                } else {
                    var content = `<div class="delete-options"><h3>Which shift to delete?</h3>`;

                    if (bookingData[date].morning) {
                        var morningBooking = bookings.find(b =>
                            b.shiftType === 'morning' || b.shiftType === 'fullday');
                        content += `
                            <button class="btn btn-danger delete-shift-btn"
                                    data-id="${morningBooking.bookingId}">
                                Delete Morning (${morningBooking.customerName})
                            </button>`;
                    }

                    if (bookingData[date].evening) {
                        var eveningBooking = bookings.find(b =>
                            b.shiftType === 'evening' || b.shiftType === 'fullday');
                        content += `
                            <button class="btn btn-danger delete-shift-btn"
                                    data-id="${eveningBooking.bookingId}">
                                Delete Evening (${eveningBooking.customerName})
                            </button>`;
                    }

                    content += `</div>`;
                    $('#bookingModal .modal-body').html(content);

                    $('.delete-shift-btn').click(function() {
                        if (confirm("Are you sure you want to delete this booking?")) {
                            deleteBooking($(this).data('id'));
                        }
                    });
                }
            }

            function deleteBooking(bookingId) {
                showSpinner();
                $.ajax({
                    url: '/EventBooking/Delete',
                    type: 'POST',
                    data: { id: bookingId },
                    success: function(response) {
                        fetchBookings();
                        closeBookingModal();
                        showMessage("Booking deleted successfully!", "success");
                    },
                    error: function(xhr, status, error) {
                        showMessage("Error deleting booking: " + error, "error");
                    },
                    complete: function() {
                        hideSpinner();
                    }
                });
            }

            function openBookingModal(date = null, shift = null) {
                $('#bookingModal .modal-body').html(originalModalContent);
                if (date) {
                    $('#bookingDate, #fromDate, #toDate').val(date);
                } else {
                    var today = new Date();
                    $('#bookingDate, #fromDate, #toDate').val(formatDate(today));
                }

                if (shift) {
                    $('#shiftType').val(shift);
                }

                // Set default values
                if (!$('#bookingId').val()) {
                    $('#bookingStatus').val('Pending');
                    $('#paymentStatus').val('Pending');
                    $('#createdDate').val(formatDate(new Date()));
                }

                populateEventDropdown();
                bookingModal.style.display = "block";
            }

            function closeBookingModal() {
                bookingModal.style.display = "none";
                $('.ClearBookingModalData').val('');
            }

            function saveBooking() {
                if (!validateBookingForm()) {
                    return;
                }

                var bookingData = {
                    bookingId: $('#bookingId').val() || 0,
                    userId: $('#userId').val(),
                    eventId: $('#eventId').val(),
                    bookingDate: $('#bookingDate').val(),
                    fromDate: $('#fromDate').val(),
                    toDate: $('#toDate').val(),
                    shiftType: $('#shiftType').val(),
                    bookingStatus: $('#bookingStatus').val(),
                    totalAmount: $('#totalAmount').val(),
                    advancePayment: $('#advancePayment').val() || 0,
                    remainingPayment: $('#remainingPayment').val(),
                    paymentStatus: $('#paymentStatus').val(),
                    createdDate: $('#createdDate').val() || formatDate(new Date()),
                    customerName: $('#customerName').val(),
                    phoneNumber: $('#phoneNumber').val(),
                    alternativeNumber: $('#alternativeNumber').val() || '',
                    address: $('#address').val() || ''
                };

                showSpinner();
                $.ajax({
                    url: '/EventBooking/AddOrUpdateEventBooking',
                    type: 'POST',
                    data: bookingData,
                    success: function(response) {
                        if (response && response.success) {
                            fetchBookings();
                            closeBookingModal();
                            showMessage("Booking saved successfully!", "success");
                        } else {
                            showMessage("Error saving booking: " + (response.message || "Unknown error"), "error");
                        }
                    },
                    error: function(xhr, status, error) {
                        showMessage("Error saving booking: " + error, "error");
                    },
                    complete: function() {
                        hideSpinner();
                    }
                });
            }

            function quickBook() {
                if (!selectedDate) {
                    showMessage("Please select a date first.", "error");
                    return;
                }

                var shift = $('#booking-shift').val();
                if (!shift) {
                    showMessage("Please select a shift.", "error");
                    return;
                }

                // Check if date is already booked for the selected shift
                if (bookingData[selectedDate]) {
                    if ((shift === 'morning' || shift === 'fullday') && bookingData[selectedDate].morning) {
                        showMessage("Morning shift is already booked for this date.", "error");
                        return;
                    }
                    if ((shift === 'evening' || shift === 'fullday') && bookingData[selectedDate].evening) {
                        showMessage("Evening shift is already booked for this date.", "error");
                        return;
                    }
                }

                openBookingModal(selectedDate, shift);
            }

            // ========== HELPER FUNCTIONS ========== //

            function populateEventDropdown() {
                var eventDropdown = $('#eventId');
                eventDropdown.empty().append('<option value="">-- Select Event --</option>');

                showSpinner();
                $.ajax({
                    url: '/EventCrud/GetAllEvents',
                    type: 'GET',
                    success: function(data) {
                        if (data && Array.isArray(data)) {
                            data.forEach(function(event) {
                                eventDropdown.append(`<option value="${event.eventId}">${event.eventName}</option>`);
                            });
                        }
                    },
                    error: function(xhr, status, error) {
                        showMessage("Error loading events: " + error, "error");
                    },
                    complete: function() {
                        hideSpinner();
                    }
                });
            }

            function validateBookingForm() {
                // Required fields
                var requiredFields = [
                    { id: 'userId', name: 'User ID' },
                    { id: 'eventId', name: 'Event' },
                    { id: 'fromDate', name: 'From Date' },
                    { id: 'toDate', name: 'To Date' },
                    { id: 'shiftType', name: 'Shift Type' },
                    { id: 'bookingStatus', name: 'Booking Status' },
                    { id: 'totalAmount', name: 'Total Amount' },
                    { id: 'paymentStatus', name: 'Payment Status' },
                    { id: 'customerName', name: 'Customer Name' },
                    { id: 'phoneNumber', name: 'Phone Number' }
                ];

                var isValid = true;
                $('#modal-message').text('').removeClass('error-message success-message');

                requiredFields.forEach(function(field) {
                    var value = $('#' + field.id).val();
                    if (!value) {
                        $('#modal-message').text(field.name + ' is required.').addClass('error-message');
                        isValid = false;
                        return false;
                    }
                });

                // Check if toDate is after fromDate
                if (isValid) {
                    var fromDate = new Date($('#fromDate').val());
                    var toDate = new Date($('#toDate').val());
                    if (toDate < fromDate) {
                        $('#modal-message').text('To Date must be after From Date.').addClass('error-message');
                        isValid = false;
                    }
                }

                return isValid;
            }

            function renderAllBookings() {
                // First clear all existing bookings visual indicators
                $('.morning-part, .evening-part').removeClass('morning-booked evening-booked');

                // Then add indicators for current bookings
                Object.keys(bookingData).forEach(function(date) {
                    $('#morning-' + date).toggleClass('morning-booked', bookingData[date].morning);
                    $('#evening-' + date).toggleClass('evening-booked', bookingData[date].evening);
                });

                // Add tooltips to show booking info on hover
                setupBookingTooltips();
            }

            function setupBookingTooltips() {
                $('.day-overlay').off('mouseenter mouseleave');

                $('.day-overlay').hover(
                    function() {
                        var dateStr = $(this).attr('id').replace('overlay-', '');
                        if (bookingData[dateStr] && bookingData[dateStr].details.length > 0) {
                            showBookingTooltip(dateStr, $(this));
                        }
                    },
                    function() {
                        $('#booking-tooltip').hide();
                    }
                );
            }

            function showBookingTooltip(date, element) {
                var bookings = bookingData[date].details;
                var content = `<strong>Bookings for ${date}</strong><br>`;

                bookings.forEach(function(booking) {
                    content += `${booking.customerName} (${booking.shiftType})<br>`;
                });

                $('#booking-tooltip').html(content);

                var pos = element.offset();
                $('#booking-tooltip').css({
                    top: pos.top + 10,
                    left: pos.left + 10
                }).show();
            }

            function populateBookingForm(booking) {
                // Clear form first
                $('.ClearBookingModalData').val('');

                // Then populate with booking data
                Object.keys(booking).forEach(key => {
                    if ($('#' + key).length) {
                        $('#' + key).val(booking[key]);
                    }
                });

                calculateRemainingPayment();
            }

            function calculateRemainingPayment() {
                var total = parseFloat($('#totalAmount').val()) || 0;
                var advance = parseFloat($('#advancePayment').val()) || 0;
                var remaining = total - advance;
                $('#remainingPayment').val(remaining >= 0 ? remaining : 0);

                // Auto-select payment status based on payments
                if (advance === 0) {
                    $('#paymentStatus').val('Pending');
                } else if (advance < total) {
                    $('#paymentStatus').val('Partially Paid');
                } else {
                    $('#paymentStatus').val('Paid');
                }
            }

            function formatDate(date) {
                var d = new Date(date),
                    month = '' + (d.getMonth() + 1),
                    day = '' + d.getDate(),
                    year = d.getFullYear();

                if (month.length < 2) month = '0' + month;
                if (day.length < 2) day = '0' + day;

                return [year, month, day].join('-');
            }

            function showSpinner() {
                $('#spinner').show();
            }

            function hideSpinner() {
                $('#spinner').hide();
            }

            function showMessage(text, type) {
                $('#message').text(text)
                    .removeClass('error-message success-message')
                    .addClass(type === 'error' ? 'error-message' : 'success-message')
                    .show().delay(5000).fadeOut();
            }

            // Initial setup
            setupDayCells();
            fetchBookings();
        });
    </script>
</body>
</html>