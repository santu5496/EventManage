<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Lodge Booking Calendar</title>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.css" />
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.js"></script>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>

    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            margin: 20px;
        }

        h1 {
            margin-bottom: 20px;
        }

        #calendar {
            width: 90%;
            margin: 20px auto;
        }

        /* Buttons styling */
        button {
            background-color: #007BFF;
            color: white;
            border: none;
            padding: 10px 20px;
            margin: 10px;
            font-size: 16px;
            cursor: pointer;
            border-radius: 5px;
        }

            button:hover {
                background-color: #0056b3;
            }

        /* Custom styling for day cells */
        .fc-daygrid-day {
            position: relative;
        }

        .day-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 1;
        }

        .morning-part {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 50%;
        }

        .evening-part {
            position: absolute;
            top: 50%;
            left: 0;
            width: 100%;
            height: 50%;
        }

        .morning-booked {
            background-color: #FF0000;
            opacity: 0.5;
        }

        .evening-booked {
            background-color: #00FF00;
            opacity: 0.5;
        }

        /* Make sure day numbers remain visible */
        .fc-daygrid-day-top {
            position: relative;
            z-index: 2;
        }

        /* Booking form styling */
        #booking-form {
            width: 350px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 8px;
            background-color: #f9f9f9;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            text-align: left;
        }

        .form-group {
            margin-bottom: 15px;
        }

        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }

        input[type="text"], select {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }

        #confirm-booking {
            background-color: #28a745;
            width: 100%;
            margin-top: 10px;
        }

            #confirm-booking:hover {
                background-color: #218838;
            }

        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.5);
        }

        .modal-content {
            background-color: #fefefe;
            margin: 10% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 90%;
            max-width: 500px;
            border-radius: 8px;
            position: relative;
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            padding-bottom: 10px;
            border-bottom: 1px solid #ddd;
        }

            .modal-header h2 {
                margin: 0;
                font-size: 20px;
            }

        .close-button {
            position: absolute;
            top: 10px;
            right: 10px;
            color: #aaa;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }

            .close-button:hover,
            .close-button:focus {
                color: #000;
                text-decoration: none;
            }

        .modal-body {
            margin-bottom: 15px;
            max-height: 60vh;
            overflow-y: auto;
        }

            .modal-body label {
                display: block;
                margin-bottom: 5px;
                font-weight: bold;
            }

            .modal-body input[type="text"],
            .modal-body input[type="number"],
            .modal-body input[type="date"],
            .modal-body select,
            .modal-body textarea {
                width: 100%;
                padding: 8px;
                border: 1px solid #ddd;
                border-radius: 4px;
                box-sizing: border-box;
                margin-bottom: 10px;
            }

            .modal-body textarea {
                resize: vertical;
            }

        .modal-footer {
            text-align: right;
        }

            .modal-footer button {
                padding: 10px 20px;
                border: none;
                border-radius: 5px;
                cursor: pointer;
                font-size: 16px;
            }

            .modal-footer .btn-primary {
                background-color: #007BFF;
                color: white;
                margin-right: 10px;
            }

                .modal-footer .btn-primary:hover {
                    background-color: #0056b3;
                }

            .modal-footer .btn-secondary {
                background-color: #e9ecef;
                color: #495057;
            }

                .modal-footer .btn-secondary:hover {
                    background-color: #d3d9df;
                }

        .selected-day {
            background-color: #e6f2ff !important;
        }

        /* Loading spinner */
        .spinner {
            display: none;
            margin: 0 auto;
            width: 50px;
            height: 50px;
            border: 3px solid #f3f3f3;
            border-radius: 50%;
            border-top: 3px solid #3498db;
            animation: spin 1s linear infinite;
        }

        @@keyframes spin {
            0%

        {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }

        }

        /* Tooltip styling */
        .booking-tooltip {
            position: absolute;
            background-color: white;
            border: 1px solid #ddd;
            padding: 10px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            z-index: 100;
            display: none;
        }

        /* Error message styling */
        .error-message {
            color: red;
            margin-top: 5px;
            font-size: 14px;
        }

        .success-message {
            color: green;
            margin-top: 5px;
            font-size: 14px;
        }
    </style>
</head>
<body>

    <h1>Lodge Booking Calendar</h1>

    <div id="bookingModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2>Add / Update Booking</h2>
                <span class="close-button">&times;</span>
            </div>
            <div class="modal-body">
                <div hidden class="form-group">
                    <label>Booking ID</label>
                    <input type="number" id="bookingId" class="ClearBookingModalData" />
                </div>
                <div class="form-group">
                    <label>User ID</label>
                    <input type="number" id="userId" class="ClearBookingModalData" required />
                </div>
                <div class="form-group">
                    <label>Event</label>
                    <select id="eventId" class="ClearBookingModalData" required>
                        <option value="">-- Select Event --</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>Booking Date</label>
                    <input type="date" id="bookingDate" class="ClearBookingModalData" required />
                </div>
                <div class="form-group">
                    <label>From Date</label>
                    <input type="date" id="fromDate" class="ClearBookingModalData" required />
                </div>
                <div class="form-group">
                    <label>To Date</label>
                    <input type="date" id="toDate" class="ClearBookingModalData" required />
                </div>
                <div class="form-group">
                    <label>Shift Type</label>
                    <select id="shiftType" class="ClearBookingModalData" required>
                        <option value="">-- Select Shift --</option>
                        <option value="morning">Morning</option>
                        <option value="evening">Evening</option>
                        <option value="fullday">Full Day</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>Booking Status</label>
                    <select id="bookingStatus" class="ClearBookingModalData" required>
                        <option value="">-- Select Status --</option>
                        <option value="Confirmed">Confirmed</option>
                        <option value="Pending">Pending</option>
                        <option value="Cancelled">Cancelled</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>Total Amount</label>
                    <input type="number" id="totalAmount" class="ClearBookingModalData" required />
                </div>
                <div class="form-group">
                    <label>Advance Payment</label>
                    <input type="number" id="advancePayment" class="ClearBookingModalData" />
                </div>
                <div class="form-group">
                    <label>Remaining Payment</label>
                    <input type="number" id="remainingPayment" class="ClearBookingModalData" readonly />
                </div>
                <div class="form-group">
                    <label>Payment Status</label>
                    <select id="paymentStatus" class="ClearBookingModalData" required>
                        <option value="">-- Select Payment Status --</option>
                        <option value="Paid">Paid</option>
                        <option value="Partially Paid">Partially Paid</option>
                        <option value="Pending">Pending</option>
                    </select>
                </div>
                <div hidden class="form-group">
                    <label>Created Date</label>
                    <input type="date" id="createdDate" class="ClearBookingModalData" />
                </div>
                <div class="form-group">
                    <label>Customer Name</label>
                    <input type="text" id="customerName" class="ClearBookingModalData" required />
                </div>
                <div class="form-group">
                    <label>Phone Number</label>
                    <input type="text" id="phoneNumber" class="ClearBookingModalData" required />
                </div>
                <div class="form-group">
                    <label>Alternative Number</label>
                    <input type="text" id="alternativeNumber" class="ClearBookingModalData" />
                </div>
                <div class="form-group">
                    <label>Address</label>
                    <textarea id="address" class="ClearBookingModalData"></textarea>
                </div>
                <div id="modal-message" class="success-message"></div>
            </div>
            <div class="modal-footer">
                <button type="button" id="save-booking" class="btn btn-primary">Save</button>
                <button type="button" id="close-booking-modal" class="btn btn-secondary">Close</button>
            </div>
        </div>
    </div>

    <div id="booking-form">
        <h3>Quick Booking</h3>
        <div class="form-group">
            <label for="booking-date">Select Date:</label>
            <input type="text" id="booking-date" placeholder="Click to select date" readonly>
        </div>
        <div class="form-group">
            <label for="booking-shift">Select Shift:</label>
            <select id="booking-shift">
                <option value="">-- Select Shift --</option>
                <option value="morning">Morning</option>
                <option value="evening">Evening</option>
                <option value="fullday">Full Day</option>
            </select>
        </div>
        <button id="quick-book">Quick Book</button>
    </div>

    <div>
        <button id="fetch-bookings">Fetch All Bookings</button>
        <button id="open-booking-modal">New Booking</button>
    </div>

    <div id="spinner" class="spinner"></div>
    <div id="message" class="success-message"></div>
    <div id="calendar"></div>

    <div id="booking-tooltip" class="booking-tooltip"></div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Global variables
            var calendarEl = document.getElementById('calendar');
            var bookingData = {}; // To store booking data
            var selectedDate = null; // To store selected date
            var calendar;
            var bookingModal = document.getElementById('bookingModal');
            var bookingModalCloseBtn = document.getElementsByClassName('close-button')[0];
            var closeBookingModalBtn = document.getElementById('close-booking-modal');
            var openBookingModalBtn = document.getElementById('open-booking-modal');
            var saveBookingBtn = document.getElementById('save-booking');
            var quickBookBtn = document.getElementById('quick-book');
            var fetchBookingsBtn = document.getElementById('fetch-bookings');
            var spinner = document.getElementById('spinner');
            var messageEl = document.getElementById('message');
            var modalMessageEl = document.getElementById('modal-message');
            var tooltip = document.getElementById('booking-tooltip');

            // Check if calendar element exists
            if (!calendarEl) {
                console.error("Calendar element not found.");
                return;
            }

            // Initialize FullCalendar
            calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                selectable: true,
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,dayGridWeek'
                },

                // When calendar dates are set/changed
                datesSet: function() {
                    setTimeout(function() {
                        setupDayCells();
                        fetchBookings(); // Fetch bookings when month changes
                    }, 100);
                },

                // When a date is clicked in the calendar
                dateClick: function(info) {
                    // Get the clicked date
                    var dateClicked = info.dateStr;
                    selectedDate = dateClicked;

                    // Set the booking date field
                    $('#bookingDate').val(dateClicked);
                    $('#fromDate').val(dateClicked);
                    $('#toDate').val(dateClicked);

                    // Highlight the selected date cell
                    $('.fc-day').removeClass('selected-day');
                    $(info.dayEl).addClass('selected-day');

                    // Check if this date has any bookings
                    if (bookingData[dateClicked]) {
                        // Show tooltip with booking details
                        showBookingTooltip(info.jsEvent, dateClicked);
                    } else {
                        // Or open new booking modal
                        openBookingModal(dateClicked);
                    }
                }
            });

            // Initialize the calendar
            calendar.render();

            // Initialize jQuery UI Datepicker for quick booking form
            $('#booking-date').datepicker({
                dateFormat: 'yy-mm-dd',
                minDate: 0, // Only allow future dates
                onSelect: function(dateText) {
                    selectedDate = dateText;
                    console.log("Date picked:", selectedDate);

                    // Highlight the selected date in the calendar
                    $('.fc-day').removeClass('selected-day');
                    $('.fc-day[data-date="' + selectedDate + '"]').addClass('selected-day');
                }
            });

            // Event listeners
            saveBookingBtn.addEventListener('click', saveBooking);
            quickBookBtn.addEventListener('click', quickBook);
            fetchBookingsBtn.addEventListener('click', fetchBookings);
            openBookingModalBtn.addEventListener('click', function() {
                openBookingModal();
            });
            closeBookingModalBtn.addEventListener('click', closeBookingModal);
            bookingModalCloseBtn.addEventListener('click', closeBookingModal);

            // Close modal when clicking outside
            window.addEventListener('click', function(event) {
                if (event.target === bookingModal) {
                    closeBookingModal();
                }
            });

            // Calculate remaining payment when total or advance changes
            $('#totalAmount, #advancePayment').on('input', calculateRemainingPayment);

            // Add overlay divs to each date cell
            function setupDayCells() {
                // Find all day cells
                var dayCells = document.querySelectorAll('.fc-daygrid-day');

                // Process each day cell
                dayCells.forEach(function(cell) {
                    // Get the date from the cell's data attribute
                    var dateStr = cell.getAttribute('data-date');

                    // Only add overlays if not already present
                    if (!cell.querySelector('.day-overlay')) {
                        // Create overlay container
                        var overlay = document.createElement('div');
                        overlay.className = 'day-overlay';
                        overlay.id = 'overlay-' + dateStr;

                        // Create morning part
                        var morningPart = document.createElement('div');
                        morningPart.className = 'morning-part';
                        morningPart.id = 'morning-' + dateStr;

                        // Create evening part
                        var eveningPart = document.createElement('div');
                        eveningPart.className = 'evening-part';
                        eveningPart.id = 'evening-' + dateStr;

                        // Add parts to overlay
                        overlay.appendChild(morningPart);
                        overlay.appendChild(eveningPart);

                        // Add overlay to cell
                        cell.appendChild(overlay);
                    }
                });
            }

            // Fetch all bookings from server
            function fetchBookings() {
                showSpinner();
                showMessage("Fetching bookings...");

                $.ajax({
                    url: '/EventBooking/GetAllEventBookings',
                    type: 'GET',
                    dataType: 'json',
                    success: function(data) {
                        hideSpinner();

                        if (data && Array.isArray(data)) {
                            // Process bookings data
                            bookingData = {};
                            data.forEach(function(booking) {
                                var fromDate = new Date(booking.fromDate);
                                var toDate = new Date(booking.toDate);
                                var currentDate = new Date(fromDate);

                                // Process each day in the booking range
                                while (currentDate <= toDate) {
                                    var dateStr = formatDate(currentDate);

                                    if (!bookingData[dateStr]) {
                                        bookingData[dateStr] = {
                                            morning: false,
                                            evening: false,
                                            details: []
                                        };
                                    }

                                    // Set shift status
                                    if (booking.shiftType === 'morning' || booking.shiftType === 'fullday') {
                                        bookingData[dateStr].morning = true;
                                    }

                                    if (booking.shiftType === 'evening' || booking.shiftType === 'fullday') {
                                        bookingData[dateStr].evening = true;
                                    }

                                    // Store booking details
                                    bookingData[dateStr].details.push(booking);

                                    // Move to next day
                                    currentDate.setDate(currentDate.getDate() + 1);
                                }
                            });

                            // Render all bookings
                            renderAllBookings();
                            showMessage("Bookings loaded successfully!", "success");
                        } else {
                            showMessage("No bookings found or invalid data format.", "error");
                        }
                    },
                    error: function(error) {
                        hideSpinner();
                        console.error('Error fetching bookings:', error);
                        showMessage("Failed to fetch bookings. Please try again.", "error");
                    }
                });
            }

            // Populate event dropdown
            function populateEventDropdown() {
                $.ajax({
                    url: '/EventCrud/GetAllEvents',
                    type: 'GET',
                    dataType: 'json',
                    success: function(data) {
                        if (data && data.length > 0) {
                            var eventDropdown = $('#eventId');
                            eventDropdown.empty();  // Clear existing options
                            eventDropdown.append($('<option>', {
                                value: '',
                                text: '-- Select Event --'
                            }));
                            $.each(data, function(i, event) {
                                eventDropdown.append($('<option>', {
                                    value: event.eventId,
                                    text: event.eventName
                                }));
                            });
                        } else {
                            showModalMessage("No events found. Please create events first.", "error");
                        }
                    },
                    error: function(error) {
                        console.error('Error fetching events:', error);
                        showModalMessage("Failed to load events. Please try again.", "error");
                    }
                });
            }

            // Open booking modal with optional date
            function openBookingModal(date = null) {
                // Clear previous data
                clearBookingModalData();

                // Set today's date as default for created date
                $('#createdDate').val(formatDate(new Date()));

                // If date is provided, set it
                if (date) {
                    $('#bookingDate').val(date);
                    $('#fromDate').val(date);
                    $('#toDate').val(date);
                }

                // Populate events dropdown
                populateEventDropdown();

                // Show modal
                bookingModal.style.display = "block";
            }

            // Close booking modal
            function closeBookingModal() {
                bookingModal.style.display = "none";
                clearBookingModalData();
                hideModalMessage();
            }

            // Clear booking modal data
            function clearBookingModalData() {
                $('.ClearBookingModalData').val('');
                hideModalMessage();
            }

            // Save booking data
            function saveBooking() {
                // Validate required fields
                if (!validateBookingForm()) {
                    return;
                }

                showModalMessage("Saving booking...");

                // Get form data
                var bookingData = {
                    bookingId: $('#bookingId').val() || 0,
                    userId: $('#userId').val(),
                    eventId: $('#eventId').val(),
                    bookingDate: $('#bookingDate').val(),
                    fromDate: $('#fromDate').val(),
                    toDate: $('#toDate').val(),
                    shiftType: $('#shiftType').val(),
                    bookingStatus: $('#bookingStatus').val(),
                    totalAmount: $('#totalAmount').val(),
                    advancePayment: $('#advancePayment').val() || 0,
                    remainingPayment: $('#remainingPayment').val(),
                    paymentStatus: $('#paymentStatus').val(),
                    createdDate: $('#createdDate').val() || formatDate(new Date()),
                    customerName: $('#customerName').val(),
                    phoneNumber: $('#phoneNumber').val(),
                    alternativeNumber: $('#alternativeNumber').val() || "",
                    address: $('#address').val() || ""
                };

                $.ajax({
                    url: '/EventBooking/AddOrUpdateEventBooking',
                    type: 'POST',
                    data: { booking: bookingData },
                    dataType: 'json',
                    success: function(response) {
                        if (response && response.success) {
                            showModalMessage("Booking saved successfully!", "success");
                            setTimeout(function() {
                                closeBookingModal();
                                fetchBookings(); // Refresh bookings
                            }, 1500);
                        } else {
                            showModalMessage(response.message || "Failed to save booking.", "error");
                        }
                    },
                    error: function(error) {
                        console.error('Error saving booking:', error);
                        showModalMessage("Failed to save booking. Please try again.", "error");
                    }
                });
            }

            // Quick book function
            function quickBook() {
                var selectedShift = $('#booking-shift').val();
                var date = $('#booking-date').val();

                // Validate inputs
                if (!date) {
                    alert("Please select a date first.");
                    return;
                }

                if (!selectedShift) {
                    alert("Please select a shift (morning, evening, or full day).");
                    return;
                }

                // Open booking modal with pre-filled data
                openBookingModal(date);
                $('#shiftType').val(selectedShift);

                // Auto-focus on customer name field
                setTimeout(function() {
                    $('#customerName').focus();
                }, 300);
            }

            // Validate booking form
            function validateBookingForm() {
                var required = ['userId', 'eventId', 'bookingDate', 'fromDate', 'toDate',
                               'shiftType', 'bookingStatus', 'totalAmount', 'paymentStatus',
                               'customerName', 'phoneNumber'];

                var valid = true;
                required.forEach(function(field) {
                    var value = $('#' + field).val();
                    if (!value) {
                        $('#' + field).css('border-color', 'red');
                        valid = false;
                    } else {
                        $('#' + field).css('border-color', '');
                    }
                });

                if (!valid) {
                    showModalMessage("Please fill all required fields.", "error");
                }

                return valid;
            }

            // Calculate remaining payment
            function calculateRemainingPayment() {
                var total = parseFloat($('#totalAmount').val()) || 0;
                var advance = parseFloat($('#advancePayment').val()) || 0;
                var remaining = total - advance;

                $('#remainingPayment').val(remaining >= 0 ? remaining : 0);

                // Auto select payment status
                if (remaining <= 0 && total > 0) {
                    $('#paymentStatus').val('Paid');
                } else if (advance > 0 && advance < total) {
                    $('#paymentStatus').val('Partially Paid');
                } else {
                    $('#paymentStatus').val('Pending');
                }
            }

            // Show booking tooltip
            function showBookingTooltip(event, date) {
                if (!bookingData[date] || !bookingData[date].details) return;

                var bookings = bookingData[date].details;
                if (bookings.length === 0) return;

                var tooltipContent = "<h3>Bookings for " + date + "</h3>";
                bookings.forEach(function(booking, index) {
                    tooltipContent += "<div style='border-bottom: 1px solid #ddd; padding: 5px 0;'>";
                    tooltipContent += "<p><strong>Customer:</strong> " + booking.customerName + "</p>";
                    tooltipContent += "<p><strong>Shift:</strong> " + booking.shiftType + "</p>";
                    tooltipContent += "<p><strong>Amount:</strong> $" + booking.totalAmount + "</p>";
                    tooltipContent += "<p><strong>Phone:</strong> " + booking.phoneNumber + "</p>";
                    tooltipContent += "<button onclick='editBooking(" + booking.bookingId + ")' style='background-color: #007BFF; color: white; border: none; padding: 5px 10px; margin-right: 5px;'>Edit</button>";
                    tooltipContent += "<button onclick='deleteBooking(" + booking.bookingId + ")' style='background-color: #dc3545; color: white; border: none; padding: 5px 10px;'>Delete</button>";
                    tooltipContent += "</div>";
                });

                tooltip.innerHTML = tooltipContent;
                tooltip.style.left = (event.pageX + 10) + 'px';
                tooltip.style.top = (event.pageY + 10) + 'px';
                tooltip.style.display = 'block';

                // Hide tooltip when clicking outside
                document.addEventListener('click', hideTooltip);
            }

            // Hide tooltip
            function hideTooltip() {
                tooltip.style.display = 'none';
                document.removeEventListener('click', hideTooltip);
            }

            // Render a single booking
            function renderBooking(date) {
                // Reset booking indicators
                $('#morning-' + date).removeClass('morning-booked');
                $('#evening-' + date).removeClass('evening-booked');

                // Apply booking colors based on booking data
                if (bookingData[date]) {
                    if (bookingData[date].morning) {
                        $('#morning-' + date).addClass('morning-booked');
                    }

                    if (bookingData[date].evening) {
                        $('#evening-' + date).addClass('evening-booked');
                    }
                }
            }

            // Render all bookings
            function renderAllBookings() {
                Object.keys(bookingData).forEach(function(date) {
                    renderBooking(date);
                });
            }

            // Edit booking
            window.editBooking = function(bookingId) {
                hideTooltip();
                showSpinner();

                $.ajax({
                    url: '/EventBooking/GetBookingById',
                    type: 'GET',
                    data: { id: bookingId },
                    dataType: 'json',
                    success: function(data) {
                        hideSpinner();
                        
        if (data) {
            // Open booking modal
            openBookingModal();

            // Populate form with booking data
            $('#bookingId').val(data.bookingId);
            $('#userId').val(data.userId);
            $('#eventId').val(data.eventId);
            $('#bookingDate').val(formatDate(new Date(data.bookingDate)));
            $('#fromDate').val(formatDate(new Date(data.fromDate)));
            $('#toDate').val(formatDate(new Date(data.toDate)));
            $('#shiftType').val(data.shiftType);
            $('#bookingStatus').val(data.bookingStatus);
            $('#totalAmount').val(data.totalAmount);
            $('#advancePayment').val(data.advancePayment);
            $('#remainingPayment').val(data.remainingPayment);
            $('#paymentStatus').val(data.paymentStatus);
            $('#createdDate').val(formatDate(new Date(data.createdDate)));
            $('#customerName').val(data.customerName);
            $('#phoneNumber').val(data.phoneNumber);
            $('#alternativeNumber').val(data.alternativeNumber);
            $('#address').val(data.address);

            showModalMessage("Booking loaded for editing.", "success");
        } else {
            showMessage("Booking not found.", "error");
        }
                            },
                            error: function(error) {
                                hideSpinner();
                                console.error('Error fetching booking:', error);
                                showMessage("Failed to load booking details.", "error");
                            }
                        });
                    };

                    // Delete booking
                    window.deleteBooking = function(bookingId) {
                        hideTooltip();

                        if (confirm("Are you sure you want to delete this booking?")) {
                            showSpinner();

                            $.ajax({
                                url: '/EventBooking/DeleteEventBooking',
                                type: 'POST',
                                data: { id: bookingId },
                                dataType: 'json',
                                success: function(response) {
                                    hideSpinner();

                                    if (response && response.success) {
                                        showMessage("Booking deleted successfully!", "success");
                                        fetchBookings(); // Refresh bookings
                                    } else {
                                        showMessage(response.message || "Failed to delete booking.", "error");
                                    }
                                },
                                error: function(error) {
                                    hideSpinner();
                                    console.error('Error deleting booking:', error);
                                    showMessage("Failed to delete booking. Please try again.", "error");
                                }
                            });
                        }
                    };

                    // Show spinner
                    function showSpinner() {
                        spinner.style.display = 'block';
                    }

                    // Hide spinner
                    function hideSpinner() {
                        spinner.style.display = 'none';
                    }

                    // Show message
                    function showMessage(text, type = "") {
                        messageEl.textContent = text;

                        // Apply appropriate styling
                        messageEl.className = type === "error" ? "error-message" : "success-message";

                        // Hide message after 5 seconds
                        setTimeout(function() {
                            messageEl.textContent = "";
                        }, 5000);
                    }

                    // Show modal message
                    function showModalMessage(text, type = "") {
                        modalMessageEl.textContent = text;

                        // Apply appropriate styling
                        modalMessageEl.className = type === "error" ? "error-message" : "success-message";
                    }

                    // Hide modal message
                    function hideModalMessage() {
                        modalMessageEl.textContent = "";
                    }

                    // Format date to YYYY-MM-DD
                    function formatDate(date) {
                        var year = date.getFullYear();
                        var month = String(date.getMonth() + 1).padStart(2, '0');
                        var day = String(date.getDate()).padStart(2, '0');
                        return year + '-' + month + '-' + day;
                    }

                    // Initial setup
                    setupDayCells();
                    fetchBookings(); // Fetch bookings on page load
                });
    </script>
</body>
</html>