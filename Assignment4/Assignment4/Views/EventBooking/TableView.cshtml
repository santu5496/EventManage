<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Advanced Event Booking Table</title>
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.4/css/jquery.dataTables.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/responsive/2.4.1/css/responsive.dataTables.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/buttons/2.3.6/css/buttons.dataTables.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        :root {
            --primary-color: #4e73df;
            --secondary-color: #858796;
            --success-color: #1cc88a;
            --info-color: #36b9cc;
            --warning-color: #f6c23e;
            --danger-color: #e74a3b;
            --light-color: #f8f9fc;
            --dark-color: #5a5c69;
        }

        body {
            padding: 15px;
            background-color: #f8f9fa;
            font-family: 'Nunito', -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
        }

        .page-header {
            background: linear-gradient(135deg, var(--primary-color) 0%, #224abe 100%);
            color: white;
            padding: 15px 20px;
            border-radius: 10px;
            margin-bottom: 20px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            display: flex;
            align-items: center;
        }

            .page-header i {
                font-size: 2rem;
                margin-right: 15px;
            }

            .page-header h2 {
                margin: 0;
                font-weight: 600;
                font-size: 1.75rem;
            }

        .card {
            border: none;
            border-radius: 10px;
            box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
            margin-bottom: 1.5rem;
        }

        .card-header {
            background: white;
            padding: 15px 20px;
            border-bottom: 1px solid #e3e6f0;
            border-top-left-radius: 10px !important;
            border-top-right-radius: 10px !important;
            font-weight: 700;
            color: var(--dark-color);
        }

        .card-body {
            padding: 20px;
        }

        .filter-row .form-group {
            margin-bottom: 15px;
        }

        .filter-row .form-control {
            height: calc(1.5em + .75rem + 2px);
            border-radius: 5px;
            border: 1px solid #d1d3e2;
        }

        .filter-row label {
            font-weight: 600;
            color: var(--dark-color);
            margin-bottom: 0.5rem;
        }

        .filter-btn {
            padding: 8px 16px;
            border-radius: 5px;
            font-weight: 600;
            transition: all 0.2s;
        }

        .btn-apply {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
        }

            .btn-apply:hover {
                background-color: #2e59d9;
                border-color: #2653d4;
            }

        .btn-reset {
            background-color: var(--secondary-color);
            border-color: var(--secondary-color);
        }

            .btn-reset:hover {
                background-color: #717384;
                border-color: #6e707e;
            }

        table.dataTable {
            border-collapse: collapse !important;
            width: 100% !important;
        }

            table.dataTable thead th {
                background: linear-gradient(to bottom, #f8f9fc 0%, #e9ecef 100%);
                color: var(--dark-color);
                font-weight: 700;
                padding: 15px;
                border-bottom: 2px solid #e3e6f0;
                text-align: left;
            }

            table.dataTable tbody tr {
                background-color: #ffffff;
            }

                table.dataTable tbody tr:hover {
                    background-color: #f2f4f8;
                }

            table.dataTable tbody td {
                padding: 12px 15px;
                border-bottom: 1px solid #e3e6f0;
                vertical-align: middle;
            }

        /* Action buttons */
        .btn-action {
            padding: 5px 10px;
            margin: 2px;
            border-radius: 4px;
            transition: all 0.2s;
        }

        .btn-view {
            background-color: var(--info-color);
            border-color: var(--info-color);
            color: white;
        }

            .btn-view:hover {
                background-color: #2aa3b9;
                border-color: #2aa3b9;
            }

        .btn-delete {
            background-color: var(--danger-color);
            border-color: var(--danger-color);
            color: white;
        }

            .btn-delete:hover {
                background-color: #d64031;
                border-color: #d64031;
            }

        /* Status badges */
        .badge {
            padding: 5px 10px;
            border-radius: 30px;
            font-weight: 600;
        }

        .badge-paid {
            background-color: var(--success-color);
            color: white;
        }

        .badge-partial {
            background-color: var(--warning-color);
            color: #5a5c69;
        }

        .badge-pending {
            background-color: var(--danger-color);
            color: white;
        }

        /* Modal styling */
        .modal-content {
            border: none;
            border-radius: 10px;
            box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
        }

        .modal-header {
            background: linear-gradient(135deg, var(--primary-color) 0%, #224abe 100%);
            color: white;
            border-top-left-radius: 10px;
            border-top-right-radius: 10px;
            border-bottom: none;
        }

        .modal-title {
            font-weight: 600;
        }

        .modal-body {
            padding: 20px;
        }

        .booking-detail {
            padding: 10px 0;
            border-bottom: 1px solid #e3e6f0;
        }

        .booking-detail-label {
            font-weight: 600;
            color: var(--dark-color);
        }

        .booking-detail-value {
            color: var(--secondary-color);
        }

        /* Responsive adjustments */
        @@media (max-width: 991.98px) {
            .filter-row .btn-group

        {
            margin-top: 15px;
            display: flex;
        }

        .filter-row .btn-group .btn {
            flex: 1;
        }

        }

        @@media (max-width: 767.98px) {
            .page-header

        {
            flex-direction: column;
            text-align: center;
        }

        .page-header i {
            margin-right: 0;
            margin-bottom: 10px;
        }

        .filter-row .form-group {
            margin-bottom: 15px;
        }

        .buttons-container {
            display: flex;
            justify-content: space-between;
            margin-top: 15px;
        }

            .buttons-container .btn {
                width: 48%;
            }

        /* Make the DataTable responsive on mobile */
        table.dataTable {
            width: 100% !important;
        }

        div.dataTables_wrapper div.dataTables_filter {
            text-align: left;
            margin-top: 15px;
        }

        div.dataTables_wrapper div.dataTables_paginate {
            text-align: center;
            margin-top: 15px;
        }

        /* Adjust the export buttons positioning */
        div.dt-buttons {
            margin-bottom: 15px;
            text-align: center;
            width: 100%;
        }

            div.dt-buttons .dt-button {
                margin: 5px;
            }

        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <div class="page-header">
            <i class="fas fa-calendar-check"></i>
            <h2>Event Bookings</h2>
        </div>

        <!-- Filters Card -->
        <div class="card mb-4">
            <div class="card-header">
                <i class="fas fa-filter mr-2"></i>Filters
            </div>
            <div class="card-body">
                <form id="filterForm">
                    <div class="row filter-row">
                        <div class="col-lg-3 col-md-6">
                            <div class="form-group">
                                <label for="filterDate">Date</label>
                                <input type="date" id="filterDate" class="form-control" placeholder="Select Date">
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-6">
                            <div class="form-group">
                                <label for="filterMonth">Month</label>
                                <select id="filterMonth" class="form-control">
                                    <option value="">All Months</option>
                                    <option value="01">January</option>
                                    <option value="02">February</option>
                                    <option value="03">March</option>
                                    <option value="04">April</option>
                                    <option value="05">May</option>
                                    <option value="06">June</option>
                                    <option value="07">July</option>
                                    <option value="08">August</option>
                                    <option value="09">September</option>
                                    <option value="10">October</option>
                                    <option value="11">November</option>
                                    <option value="12">December</option>
                                </select>
                            </div>
                        </div>
                        <div hidden class="col-lg-3 col-md-6">
                            <div class="form-group">
                                <label for="filterEventType">Event Type</label>
                                <select id="filterEventType" class="form-control">
                                    <option value="">All Events</option>
                                    <option value="1">Wedding</option>
                                    <option value="2">Corporate Event</option>
                                    <option value="3">Birthday Party</option>
                                    <option value="4">Family Gathering</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-6">
                            <div class="form-group">
                                <label for="filterPayment">Payment Status</label>
                                <select id="filterPayment" class="form-control">
                                    <option value="">All Statuses</option>
                                    <option value="Paid">Paid</option>
                                    <option value="Partially Paid">Partially Paid</option>
                                    <option value="Pending">Pending</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="buttons-container">
                                <button type="button" class="btn btn-primary btn-apply filter-btn" onclick="applyFilters()">
                                    <i class="fas fa-search mr-1"></i> Apply Filters
                                </button>
                                <button type="button" class="btn btn-secondary btn-reset filter-btn" onclick="resetFilters()">
                                    <i class="fas fa-sync-alt mr-1"></i> Reset
                                </button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <!-- Bookings Table Card -->
        <div class="card">
            <div class="card-header">
                <i class="fas fa-table mr-2"></i>All Bookings
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table id="bookingsTable" class="display nowrap" style="width:100%">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Customer</th>
                                <th>Phone</th>
                                <th>Event</th>
                                <th>Date Range</th>
                                <th>Shift</th>
                                <th>Total</th>
                                <th>Advance</th>
                                <th>Remaining</th>
                                <th>Status</th>
                                <th>Payment</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="bookingDetailsModal" tabindex="-1" role="dialog" aria-labelledby="detailsModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="detailsModalLabel">
                        <i class="fas fa-info-circle mr-2"></i>Booking Details
                    </h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" id="detailsContent">
                    <!-- Content will be loaded dynamically -->
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/responsive/2.4.1/js/dataTables.responsive.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.3.6/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.3.6/js/buttons.html5.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        let bookingsCache = [];

        function formatDate(dateStr) {
            if (!dateStr) return '';
            const d = new Date(dateStr);
            return d.toLocaleDateString('en-GB');
        }

        function getEventName(eventId) {
            const events = {
                1: 'Wedding',
                2: 'Corporate Event',
                3: 'Birthday Party',
                4: 'Family Gathering'
            };
            return events[eventId] || 'Unknown';
        }

        function getPaymentBadge(status) {
            switch(status) {
                case 'Paid':
                    return '<span class="badge badge-paid">Paid</span>';
                case 'Partially Paid':
                    return '<span class="badge badge-partial">Partially Paid</span>';
                case 'Pending':
                    return '<span class="badge badge-pending">Pending</span>';
                default:
                    return status;
            }
        }

        function formatCurrency(amount) {
            return new Intl.NumberFormat('en-IN', {
                style: 'currency',
                currency: 'INR',
                minimumFractionDigits: 0
            }).format(amount || 0);
        }

        function showBookingDetails(booking) {
            const html = `
                <div class="row">
                    <div class="col-md-6">
                        <div class="booking-detail">
                            <span class="booking-detail-label">Customer:</span>
                            <span class="booking-detail-value">${booking.customerName}</span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="booking-detail">
                            <span class="booking-detail-label">Phone:</span>
                            <span class="booking-detail-value">${booking.phoneNumber || 'N/A'}</span>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="booking-detail">
                            <span class="booking-detail-label">Event:</span>
                            <span class="booking-detail-value">${booking.eventName}</span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="booking-detail">
                            <span class="booking-detail-label">Shift:</span>
                            <span class="booking-detail-value">${booking.shiftType}</span>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-12">
                        <div class="booking-detail">
                            <span class="booking-detail-label">Date Range:</span>
                            <span class="booking-detail-value">${formatDate(booking.fromDate)} - ${formatDate(booking.toDate)}</span>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-4">
                        <div class="booking-detail">
                            <span class="booking-detail-label">Total:</span>
                            <span class="booking-detail-value">${formatCurrency(booking.totalAmount)}</span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="booking-detail">
                            <span class="booking-detail-label">Advance:</span>
                            <span class="booking-detail-value">${formatCurrency(booking.advancePayment)}</span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="booking-detail">
                            <span class="booking-detail-label">Remaining:</span>
                            <span class="booking-detail-value">${formatCurrency(booking.remainingPayment)}</span>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="booking-detail">
                            <span class="booking-detail-label">Status:</span>
                            <span class="booking-detail-value">${booking.bookingStatus}</span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="booking-detail">
                            <span class="booking-detail-label">Payment:</span>
                            <span class="booking-detail-value">${booking.paymentStatus}</span>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-12">
                        <div class="booking-detail">
                            <span class="booking-detail-label">Address:</span>
                            <span class="booking-detail-value">${booking.address || 'N/A'}</span>
                        </div>
                    </div>
                </div>
            `;
            $('#detailsContent').html(html);
            $('#bookingDetailsModal').modal('show');
        }

        function loadBookingsList() {
            $.ajax({
                url: '/EventBooking/GetAllEventBookings',
                type: 'GET',
                success: function (bookings) {
                    bookingsCache = bookings;
                    populateTable(bookings);
                },
                error: function () {
                    alert('Failed to load bookings.');
                }
            });
        }

        function populateTable(bookings) {
            const table = $('#bookingsTable').DataTable();
            table.clear();
            bookings.forEach(b => {
                table.row.add([
                    b.bookingId,
                    b.customerName,
                    b.phoneNumber || '',
                    b.eventName,
                    `${formatDate(b.fromDate)} - ${formatDate(b.toDate)}`,
                    b.shiftType,
                    formatCurrency(b.totalAmount),
                    formatCurrency(b.advancePayment),
                    formatCurrency(b.remainingPayment),
                    b.bookingStatus,
                    getPaymentBadge(b.paymentStatus),
                    `<button class="btn btn-view btn-action view"><i class="fas fa-eye"></i></button>
                     <button class="btn btn-delete btn-action delete"><i class="fas fa-trash"></i></button>`
                ]);
            });
            table.draw();
        }

        function applyFilters() {
            const date = $('#filterDate').val();
            const month = $('#filterMonth').val();
            const payment = $('#filterPayment').val();
            const eventType = $('#filterEventType').val();

            const filtered = bookingsCache.filter(b => {
                const fromDate = new Date(b.fromDate);

                // Convert date format for comparison if needed
                let matchDate = true;
                if (date) {
                    const filterDate = new Date(date);
                    const bookingDate = new Date(b.fromDate);
                    matchDate = filterDate.getDate() === bookingDate.getDate() &&
                                filterDate.getMonth() === bookingDate.getMonth() &&
                                filterDate.getFullYear() === bookingDate.getFullYear();
                }

                const matchMonth = !month || ("0" + (fromDate.getMonth() + 1)).slice(-2) === month;
                const matchPayment = !payment || b.paymentStatus === payment;
                const matchEvent = !eventType || b.eventId.toString() === eventType;

                return matchDate && matchMonth && matchPayment && matchEvent;
            });

            populateTable(filtered);
        }

        function resetFilters() {
            $('#filterDate, #filterMonth, #filterPayment, #filterEventType').val('');
            populateTable(bookingsCache);
        }

        $(document).ready(function () {
            $('#bookingsTable').DataTable({
                responsive: true,
                pageLength: 10,
                dom: '<"row"<"col-sm-12 col-md-6"B><"col-sm-12 col-md-6"f>>rt<"row"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>',
                buttons: [
              
                    {
                        extend: 'excel',
                        text: '<i class="fas fa-file-excel"></i> Excel',
                        className: 'btn btn-sm btn-outline-primary'
                    },
                    {
                        extend: 'pdf',
                        text: '<i class="fas fa-file-pdf"></i> PDF',
                        className: 'btn btn-sm btn-outline-primary'
                    }
                ],
                columnDefs: [
                    { responsivePriority: 1, targets: [0, 1, 3, 10, 11] },
                    { responsivePriority: 2, targets: [6, 7, 8] },
                    { responsivePriority: 3, targets: [2, 4, 5, 9] }
                ],
                language: {
                    search: "<span class='fas fa-search'></span> _INPUT_",
                    searchPlaceholder: "Search bookings..."
                }
            });

            loadBookingsList();

            $('#bookingsTable tbody').on('click', 'button.view', function () {
                const data = $('#bookingsTable').DataTable().row($(this).parents('tr')).data();
                const booking = bookingsCache.find(b => b.bookingId == data[0]);
                if (booking) {
                    showBookingDetails(booking);
                }
            });

            $('#bookingsTable tbody').on('click', 'button.delete', function () {
                const data = $('#bookingsTable').DataTable().row($(this).parents('tr')).data();
                const bookingId = data[0];

                if (confirm('Are you sure you want to delete booking ID ' + bookingId + '?')) {
                    $.ajax({
                        url: `/EventBooking/Delete/${bookingId}`,
                        type: 'POST',
                        success: function (res) {
                            alert(res.message);
                            loadBookingsList();
                        },
                        error: function () {
                            alert('Delete failed.');
                        }
                    });
                }
            });

            // Initialize date picker format
            $('#filterDate').on('change', function() {
                if ($(this).val()) {
                    const dateObj = new Date($(this).val());
                    $(this).attr('data-formatted-date',
                        `${dateObj.getDate().toString().padStart(2, '0')}/${(dateObj.getMonth() + 1).toString().padStart(2, '0')}/${dateObj.getFullYear()}`
                    );
                } else {
                    $(this).attr('data-formatted-date', '');
                }
            });

            // Make buttons responsive for mobile
            $('.buttons-container').addClass('d-flex');
            if ($(window).width() <= 767) {
                $('.buttons-container').addClass('justify-content-between');
            } else {
                $('.buttons-container').addClass('justify-content-end');
            }

            $(window).on('resize', function() {
                if ($(window).width() <= 767) {
                    $('.buttons-container').removeClass('justify-content-end').addClass('justify-content-between');
                } else {
                    $('.buttons-container').removeClass('justify-content-between').addClass('justify-content-end');
                }
            });
        });
    </script>
</body>
</html>